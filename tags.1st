<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- This file contains the definitions of all tag groups and tags that are used
      throughout the Skeleton data files. These elements relied upon by numerous
      other facets of the data files and must be processed first during compilation,
      so they are placed in a file with a ".1st" extension.
-->

<document signature="Hero Lab Structure">


  <!-- The "group" elements define tag groups that consist of an assortment of tags.
        These tags can be assigned throughout the data files and referenced via scripts
        and tag expressions to orchestrate all the behaviors you need.
  -->

  <!-- Helper group - general helper tags used internally only
        This group is where you can put a variety of tags that don't really belong in
        any other group - it's kind of a "miscellaneous" group. The key requirement is
        that tags in this group should never be intended for access by the user, as
        they are for internal use only. Another important detail is that you cannot
        ever establish any ordering of things based on Helper tags, since any number
        of Helper tags can be assigned to any particular thing.
  -->
  <group
    id="Helper">
    <value id="Bootstrap"/>   <!-- Identifies a pick that must be bootstrapped for every hero -->
    <value id="Displace"/>    <!-- NOTE - not currently used, but kept here for backwards compatibility - Pick should be displaced if it is designated for displacement -->
    <value id="Maximum"/>     <!-- Ability has reached its maximum level and cannot be improved -->
    <value id="Minimum"/>     <!-- Ability has reached its minimum level and cannot be decreased -->
    <value id="NoDelete"/>    <!-- Indicates the pick cannot be deleted because another selection precludes it -->
    <value id="Activated"/>   <!-- Indicates an in-play adjustment or ability that has been activated -->
    <value id="NoMove"/>      <!-- Identifies gear that cannot be transferred between actors -->
    <value id="ResetMax"/>    <!-- Tracker reset value is the maximum instead of the minimum -->
    <value id="NoReset"/>     <!-- Tracker value does not possess a reset button -->
    <value id="NoMaxBound"/>  <!-- Tracker user value is not bounded at the maximum end -->
    <value id="NoMinBound"/>  <!-- Tracker user value is not bounded at the minimum end -->
    <value id="PwrClass"/>    <!-- Added to powers that are added on the class tab -->
    <value id="PwrMulti"/>    <!-- Added to powers that are added on the multiclass tab -->
    <value id="PwrParMult"/>  <!-- Added to powers that are added to the multiclass tables on the paragon path tab -->
    <value id="Trained"/>     <!-- This is a trained skill trained from the skill tab -->
    <value id="TrainedAut"/>  <!-- This is a skill that was trained automatically, e.g. by a class -->
    <value id="Exhausted"/>   <!-- This power is exhausted and cannot be used -->
    <value id="ExPwrItem"/>   <!-- This power is exhausted because it's a daily item power, and the limit has been used -->
    <value id="ExPwrParEq"/>  <!-- This power is exhausted because it's on a magic item, and the item isn't equipped -->
    <value id="Exceeded"/>    <!-- This power has exceeded its use limits and is invalid -->
    <value id="SplitInPl"/>   <!-- If this trait has 'in play' modifications, it displays its total as a split X/Y instead of just a plain total -->
    <value id="StartLang"/>   <!-- This language was taken as a starting language -->
    <value id="Mastered"/>    <!-- This ritual has been mastered -->
    <value id="NoMaster"/>    <!-- This ritual can't be mastered for some reason (maybe you're too low level, for example) -->
    <value id="RitScroll"/>   <!-- This ritual is on a scroll -->
    <value id="PwrUnderLv"/>  <!-- This power can be replaced with a higher-level power -->
    <value id="ChosenOpt"/>   <!-- This build option was chosen by the class -->
    <value id="PowerCheck"/>  <!-- This power needs a checkbox name, so the user can choose to prepare it today or not. -->
    <value id="Proficient"/>  <!-- The hero is proficient with this weapon -->
    <value id="EqpMain"/>     <!-- This weapon is equipped in the main hand -->
    <value id="EqpOff"/>      <!-- This weapon is equipped in the off hand -->
    <value id="EqpBoth"/>     <!-- This weapon is equipped in both hands -->
    <value id="SizeError"/>   <!-- This weapon is the wrong size and can't be used -->
    <value id="IsWeapon"/>    <!-- This user has equipped a weapon in this slot -->
    <value id="Disable"/>     <!-- This thing has been disabled somehow -->
    <value id="ImplemOK"/>    <!-- This weapon is a valid implement for the hero -->
    <value id="ConstrItem"/>  <!-- This weapon is a valid implement for the hero -->
    <value id="MultiFeatr"/>  <!-- This class feature was added as part of a multiclass feat, and should be shown on the Multiclass tab -->
    <value id="FoundItem"/>   <!-- This magic item is listed as a 'found item' for RPGA stuff. -->
    <value id="FoundItmOv"/>  <!-- This found item entry has some sort of error with the magic item. -->
    <value id="AutoClsPwr"/>  <!-- This power was automatically added by the class, for example Warlock at-will powers. -->
    <value id="SecondCls"/>   <!-- This is the second class on a hero which has 2 hybrid classes. -->
    <value id="AttBonus"/>    <!-- This tag can be added N times to a weapon/implement/magic item pick to give it a +N attack bonus. -->
    <value id="DamBonus"/>    <!-- This tag can be added N times to a weapon/implement/magic item pick to give it a +1 damage bonus. -->
    <value id="CustomItem"/>  <!-- Identifies a thing that has a user customizable name -->
    <value id="NoPersText"/>  <!-- User entered no background text -->
    <value id="NoArmorChk"/>  <!-- Armor check penalties do not apply to this skill (only used for skills based on physical attributes) -->
    <value id="BestAbil"/>    <!-- Use the best ability score for this trait -->
    <value id="IndivDmg"/>    <!-- not used any more - ignore -->
    <value id="SklPwrTrnd"/>  <!-- This skill counts as being trained for the purpose of skill powers -->
    <value id="ForceAtW"/>    <!-- This power is forced to an at-will type, instead of whatever type it used to be - this is used for some Essentials classes who add Utility powers through the at-will table -->
    <value id="ChosenLang"/>  <!-- This language was chosen by the hero's background -->
    </group>

  <!-- User group - general helper tags that can be assigned by users via the Editor
        Any tags that you would normally put in the Helper group, but that you also
        want to make visible to the user within the Editor, should be placed here.
        This group has the same limitation as the Helper group in that you can never
        user this group for ordering within a sortset.
  -->
  <group
    id="User"
    dynamic="yes">
    <value id="Defense"/>     <!-- Identifies a defense trait -->
    <value id="BasicsWide"/>  <!-- Shown in wide table on basics tab -->
    <value id="BasicsNarr"/>  <!-- Shown in narrow table on basics tab -->
    <value id="TrtHealth"/>   <!-- This is a health trait, and is listed in summary output -->
    <value id="Displace"/>    <!-- Displace this power from a magic weapon onto the hero -->
    <value id="AllAttrs"/>    <!-- This pick increases all attributes -->
    <value id="ClassFeat"/>   <!-- This power is a built-in class feature -->
    <value id="PathFeat"/>    <!-- This power is a built-in paragon path feature -->
    <value id="DestFeat"/>    <!-- This power is a built-in epic destiny feature -->
    <value id="ThemeFeat"/>   <!-- This power is a built-in theme feature -->
    <value id="NoAutoName"/>  <!-- Whether to not automatically amend the naming of a pick with selections -->
    <value id="CreateOnly"/>  <!-- Whether an ability is selectable only during creation -->
    <value id="Activation"/>  <!-- Whether an ability can be activated to invoke dynamic changes -->
    <value id="Resistance"/>  <!-- Identifies a resistance trait -->
    <value id="Combat"/>      <!-- Identifies a combat trait -->
    <value id="AttrPhys"/>    <!-- This attribute is a physical attribute (strength, dexterity, constitution) -->
    <value id="AttrMental"/>  <!-- This attribute is a mental attribute (intelligence, wisdom, charisma) -->
    <value id="Not1stLev"/>   <!-- This language may not be taken at level 1 (e.g Supernal, Abyssal). -->
    <value id="BadLevelOK"/>  <!-- If assigned to a pick with an invalid level requirement, the error is not shown for the pick (the pick is assumed to show the error in its own way). -->
    <value id="ResChkMin"/>   <!-- This resource should have its minimum value checked by the component script -->
    <value id="ResChkMax"/>   <!-- This resource should have its maximum value checked by the component script -->
    <value id="ResUnlim"/>    <!-- This resource has no limits -->
    <value id="ResNoMonst"/>  <!-- This resource is ignored on monsters -->
    <value id="CanAdjust"/>   <!-- This derived trait can be changed with an Adjustment -->
    <value id="PwrAsClass"/>  <!-- Added to powers that count as a class power, in terms of taking up slots (for example, the Bola Expert power). -->
    <value id="NoMgcEquip"/>  <!-- Items from this magic item slot should never be equipped. -->
    <value id="Invert"/>      <!-- Bonuses to this trait reduce the value, rather than increasing it. For example, a +1 bonus to saving throws reduces the target to 9+, not 11+. -->
    <value id="NoAttHeavy"/>  <!-- This defense gets no attribute bonus when the hero is wearing heavy armor (AC). -->
    <value id="PassSense"/>   <!-- This skill is a passive sense, and must be displayed on the character sheet. -->
    <value id="Use1HTable"/>  <!-- This weapon uses the 1-handed weapon table for damage, not the 2-handed weapon table. -->
    <value id="UserDeriv"/>   <!-- This derived trait needs to include user values, for example defenses when creating a monster. -->
    <value id="MonOptIncr"/>  <!-- This monster option requires an incrementer. -->
    <value id="NoBootMech"/>  <!-- Don't bootstrap this Mechanics pick automatically - it gets added some other way (e.g. Psion power mechanics). -->
    <value id="RangeDex"/>    <!-- This power is special - when used with a ranged weapon, it uses your dexterity bonus for attack and damage. -->
    <value id="Hybrid"/>      <!-- This is a Hybrid class. -->
    <value id="PPNormal"/>    <!-- Psionic class that gets normal PP -->
    <value id="PPHybrid"/>    <!-- Psionic class that gets hybrid PP -->
    <value id="NeedChosen"/>  <!-- This power behaves like a build option - it must be "chosen" before you can use / see it -->
    <value id="FeatureChk"/>  <!-- This class feature needs to display a checkbox -->
    <value id="StdRace"/>     <!-- This is a standard race that can be disabled with the "Disable Standard Races" source -->
    <value id="ReqChanDiv"/>  <!-- This requires the Channel Divinity power. -->
    <value id="ClassOK"/>     <!-- Ignore any errors for this power having the wrong class. -->
    <value id="RecomPower"/>  <!-- This class uses recommended powers. -->
    <value id="HexbladeWp"/>  <!-- This is a special Hexblade weapon. -->
    <value id="BackLang"/>    <!-- This is a background optional language. -->
    </group>

  <!-- Hero group - Helper tags assigned exclusively to the hero/actor
        Sometimes you'll have tags that need to be assigned to hero instead of to
        individual things. Those tags should be kept distinct from normal Helper or
        User tags and defined as Hero tags. The benefit of doing this is that tags
        are immediately obvious as to their role based on the group they belong to.
  -->
  <group
    id="Hero">
    <value id="Dead"/>        <!-- Indicates hero is dead or otherwise out of combat -->
    <value id="Bloodied"/>    <!-- Indicates hero is bloodied (half health or less) -->
    <value id="NoDamage"/>    <!-- Indicates no damage history exists for the hero -->
    <value id="Hand"/>        <!-- Each tag indicates one hand worth of weapons equipped -->
    <value id="Oversized"/>   <!-- Each tag indicates that we can use weapons one size larger as if they were our size -->
    <value id="OneHandOff"/>  <!-- Indicates that the hero can equip one-handed weapons in his off-hand. -->
    <value id="Monster"/>     <!-- The hero is a monster or NPC. -->
    <value id="RerollInit"/>  <!-- Indicates that the hero can re-roll initiative values -->
    <value id="Hybrid"/>      <!-- Indicates that the hero has 2 Hybrid classes instead of 1 normal class -->
    <value id="NoArmorSpd"/>  <!-- Speed not reduced by wearing armor -->
    <value id="NoArmorChk"/>  <!-- No armor check penalties from armor -->
    <value id="NoShldChk"/>   <!-- No armor check penalties from shields -->
    <value id="NoEncumSpd"/>  <!-- Speed not reduced by encumbrance -->
    <value id="ChannelDiv"/>  <!-- Channel Divinity ability present -->
    <value id="HidePwrAtW" name="No At-Will Powers"/>  <!-- This class gets no at-will powers. -->
    <value id="HidePwrEnc" name="No Encounter Powers"/>  <!-- This class gets no encounter powers. -->
    <value id="HidePwrUti" name="No Utility Powers"/>  <!-- This class gets no utility powers. -->
    <value id="HidePwrDai" name="No Daily Powers"/>  <!-- This class gets no daily powers. -->
    <value id="NoMemUnder"/>  <!-- This class doesn't care about underlevel memorized spells (Mage). -->
    </group>

  <!-- Separator group - used to help sort things on the special tab
        If a thing has the Separator.Yes tag, it is sorted to the top of its
        category on the tab, to be shown as a separator.
  -->
  <group
    id="Separator">
    <value id="Yes"/>
    </group>

  <!-- DashTacCon group - behaviors associated with the Dashboard and/or Tactical Console
        All tags that control behaviors relating to the Dashboard or TacCon should be
        defined in this group.
  -->
  <group
    id="DashTacCon">
    <value id="Special"/>     <!-- Whether to show pick within the "Special" mouse-over -->
    <value id="Rolls"/>       <!-- Whether to show pick within the "Rolls" mouse-over -->
    <value id="Combat"/>      <!-- Whether to show pick within the "Combat" mouse-over -->
    <value id="NonCombat"/>   <!-- Whether to show pick within the list of "NonCombat" information on the TacCon -->
    <value id="Traits"/>      <!-- Whether to show pick in the "traits" column on the TacCon -->
    </group>

  <!-- Equipment group - helper tags specific to equipment
        Any tags associated with equipment of all varieties should be defined in
        this group.
  -->
  <group
    id="Equipment">
    <value id="Hand" name="Requires one or more hands"/>          <!-- Identifies equipment that requires hands to use -->
    <value id="TwoHand" name="Requires two hands"/>               <!-- Identifies equipment that is two-handed -->
    <value id="Ranged" name="Ranged weapon/etc"/>                 <!-- Identifies equipment that can be used at range -->
    <value id="StartEquip" name="Gear starts out equipped"/>      <!-- Identifies equipment that is equipped by default -->
    <value id="AutoEquip" name="Gear is auto-equipped"/>          <!-- Identifies equipment that is automatically equipped (e.g. natural attacks) -->
    <value id="Natural" name="Natural weapon/armor/etc."/>        <!-- Identifies equipment that is a natural form and exempt from various behaviors -->
    <value id="CustomGear" name="Custom Gear"/>                   <!-- Identifies a piece of gear that is user customizable -->
    <value id="SuperImpl" name="Superior Implement"/>   <!-- This is a superior implement -->
    </group>

  <!-- RitualCat group - categories of rituals.
  -->
  <group
    id="RitualCat"
    dynamic="yes">
    <value id="Binding"/>
    <value id="Creation"/>
    <value id="Deception"/>
    <value id="Divination"/>
    <value id="Explor" name="Exploration"/>
    <value id="Restor" name="Restoration"/>
    <value id="Scrying"/>
    <value id="Travel"/>
    <value id="Warding"/>
    </group>

  <!-- RitualSkl group - key skills for rituals. Tags for each skill are
      automatically added.
  -->
  <group
    id="RitualSkl"
    dynamic="yes"
    sequence="explicit">
    <value id="NoCheck" name="no check" order="99"/>
    </group>

  <!-- ftDescript group - feat descriptors, for bloodlines, etc.
  -->
  <group
    id="ftDescript"
    dynamic="yes">
    <value id="Placeholdr" name="Placeholder"/>
    <value id="Rune"/>
    </group>

  <!-- Alignment group - the appropriate tags are added to the hero when an
      alignment is chosen. If a hero is Lawful Good, he will have both the
      "Lawful" and "Good" tags. These tags are also present on deities.
  -->
  <group
    id="Alignment"
    dynamic="yes">
    <value id="Lawful"/>
    <value id="Good"/>
    <value id="Evil"/>
    <value id="Chaotic"/>
    </group>

  <!-- Gender group - the appropriate tags are added to the hero when an
      gender is chosen. These tags are also present on deities.
  -->
  <group
    id="Gender">
    <value id="Male"/>
    <value id="Female"/>
    </group>

  <!-- Weapon group - helper tags specific to weapons
        If a tag is only used in conjunction with weapons, it should be defined in
        this group instead of the Equipment group.
  -->
  <group
    id="Weapon">
    <value id="SpecRange" name="Range is special"/>               <!-- Identifies a weapon with a special range -->
    </group>

  <!-- Weapon damage group - tags for each different damage value
  -->
  <group
    id="WepDamage"
    maxcount="1">
    <value id="1d4"/>
    <value id="1d6"/>
    <value id="1d8"/>
    <value id="1d10"/>
    <value id="1d12"/>
    <value id="2d4"/>
    <value id="2d6"/>
    <value id="2d8"/>
    <value id="2d10"/>
    </group>
  <group
    id="WepDamSec"
    maxcount="1"
    inherit="WepDamage">
    </group>

  <!-- Size group - tags for each different size
  -->
  <group
    id="Size">
    <value id="Tiny"/>
    <value id="Small"/>
    <value id="Medium"/>
    <value id="Large"/>
    <value id="Huge"/>
    <value id="Gargantuan"/>
    </group>

  <!-- Weapon properties group - tags for each different weapon property
  -->
  <group
    id="WepProp">
    <value id="NonProf" name="Non-Proficient"/>
    <value id="HeavyThrow" name="Heavy Thrown"/>
    <value id="HighCrit" name="High Crit"/>
    <value id="LightThrow" name="Light Thrown"/>
    <value id="LoadFree" name="Load free"/>
    <value id="LoadMinor" name="Load minor"/>
    <value id="LoadMove" name="Load move"/>
    <value id="OffHand" name="Off-Hand"/>
    <value id="Reach"/>
    <value id="Small"/>
    <value id="Versatile"/>
    <value id="Defensive"/>
    <value id="Double"/>
    <value id="Accurate"/>
    <value id="Unerring"/>
    <value id="Unstoppabl" name="Unstoppable"/>
    <value id="Undeniable"/>
    <value id="Deadly"/>
    </group>

  <!-- Armor type group - whether armor is heavy or light
  -->
  <group
    id="ArmorCat"
    maxcount="1">
    <value id="Light"/>
    <value id="Heavy"/>
    </group>


  <!-- InPlay group - tags used to control behaviors associated with in-play effects
        Behaviors that govern in-play adjustments, permanenent adjustments, or other
        in-play effects belong in the group.
  -->
  <group
    id="InPlay">
    <value id="PermOK"/>      <!-- Identifies an in-play adjustment that *can* be permanent -->
    <value id="TempOK"/>      <!-- Identifies an in-play adjustment that *can* be temporary -->
    <value id="Permanent"/>   <!-- Identifies a permanent in-play adjustment -->
    <value id="Temporary"/>   <!-- Identifies a temporary in-play adjustment -->
    </group>

  <!-- Print group - tags used to control printed output
        There will typically be a variety of print-centric tags once your data files
        are fleshed out with multiple dossiers and sophisticated character sheets.
        All such tags should be defined in this group.
  -->
  <group
    id="Print">
    <value id="NoPrint"/>     <!-- Indicates the pick should not be included in printouts -->
    <value id="NoPowerCrd"/>  <!-- Don't print a power card for this magic item -->
    </group>

  <!-- HideTab group - controls which tabs are visible for the character
        Every tab and summary panel has a "live" tagexpr that tests for the tag that
        corresponds to the panel. Consequently, every such panel should have a tag
        defined for it below. You can then assign the proper tags to the hero so that
        the matching panels are hidden for the hero. This can really extremely useful
        in game systems like World of Darkness, where you can have multiple typs of
        heroes (e.g. vampires, ghosts, mortals) and different tabs should appear for
        each type.
  -->
  <group
    id="HideTab">
    <value id="class"/>
    <value id="paragon"/>
    <value id="epicdest"/>
    <value id="race"/>
    <value id="theme"/>
    <value id="basics"/>
    <value id="skills"/>
    <value id="feats"/>
    <value id="multiclass"/>
    <value id="armory"/>
    <value id="gear"/>
    <value id="magic"/>
    <value id="rituals"/>
    <value id="allies"/>
    <value id="personal"/>
    <value id="combat"/>
    <value id="rpga"/>
    <value id="journal"/>
    <value id="inplay"/>
    <value id="special"/>
    <value id="smBasics"/>
    <value id="smPowers"/>
    <value id="smSkill"/>
    <value id="smArmory"/>
    </group>

  <!-- Hide group - controls whether things are hidden in certain contexts
        In the same way that the HideTab group controls which panels are made visible
        for a given character, the Hide group controls the visibiliy of individual
        things based on particular character types and/or settings. When a thing must
        be hidden in a particular context, define a tag for that context here and test
        for it within that context. Then simply assign the tag to the any thing that
        must be hidden.
  -->
  <group
    id="Hide">
    <value id="Attribute"/>       <!-- Indicates an attribute that is not user selectable -->
    <value id="Skill"/>           <!-- Indicates a skill that is not user selectable -->
    <value id="InPlay"/>          <!-- Indicates an in-play adjustment that is hidden from view -->
    <value id="Ability"/>         <!-- Indicates an ability that is not user selectable (i.e. conferred by race or similar mechanism) -->
    <value id="Special"/>         <!-- Indicates a trait that is hidden from the Special tab -->
    <value id="Tracker"/>         <!-- Indicates a tracker that is hidden from the In-Play tab (and likely shown somewhere else) -->
    <value id="Weapon"/>          <!-- Indicates a weapon that is hidden from the Armory tab -->
    <value id="Ritual"/>          <!-- Indicates a ritual that is hidden from the Ritual table on the ritual tab -->
    <value id="RitualScr"/>       <!-- Indicates a ritual that is hidden from the Ritual Scrolls table on the ritual tab -->
    <value id="Paragon"/>         <!-- Indicates a feature that is hidden on the Paragon tab -->
    <value id="Language"/>        <!-- Indicates a language that is hidden on the Race and Personal tabs and in output -->
    </group>

  <!-- Show group - controls whether things are shown in certain contexts
        This group is the analog of the Hide group. Normally, things will always be
        visible except in certain situations, in which case the Hide group is ideal.
        In the rare situation where things must be hidden except in certain cases,
        the Show group comes in handy.
  -->
  <group
    id="Show">
    <value id="dummy"/>   <!-- replace this tag when you define a real context -->
    </group>

  <!-- Promote group - controls whether an item is promoted to the top
        This group should only ever have the one tag. If the tag is assigned to a
        thing, it has been promoted to the top of the list. By having this tag in its
        own group, the group can be readily used within a sortset so that promoted
        items are shown first.
  -->
  <group
    id="Promote">
    <value id="Top"/>
    </group>

  <!-- Armory group - controls order in which armor and weapons are shown
        Each type of weapon/armor must be assigned one of these tags to dictate its
        basic nature (this is done by via the components). Once assigned, this group
        can be used within a sortset to sequence the equipment in a consistent order.

        Since this group is used for sorting and the different equipment types don't
        lend themselves to a natural sort order based on their names, we assign an
        explicit sort order value to each tag and designate the entire group as
        having an "explicit" sequencing behavior.
  -->
  <group
    id="Armory"
    sequence="explicit">
    <value id="Armor" order="1"/>
    <value id="Shield" order="2"/>
    <value id="Range" order="3"/>
    <value id="Melee" order="4"/>
    </group>

  <!-- Equipped group - used for sorting equipped weapons first
        This group should only ever have the one tag. If the tag is assigned to a
        thing, it has been equipped by the actor. By having this tag in its own
        group, the group can be readily used within a sortset so that equipped items
        are shown first.
  -->
  <group
    id="Equipped">
    <value id="Equipped"/>    <!-- Identifies weapons and armor that are equipped -->
    </group>

  <!-- AdjustShow group - tags associated with display of in-play adjustments
        Different adjustments can be configured by the user in different ways, and
        there is one AdjustShow tag for each such way. Each adjustment must be
        assigned tags corresponding to the different customizations that the user
        can apply to that adjustment.
  -->
  <group
    id="AdjustShow">
    <value id="Increment"/>   <!-- adjustment has an incrementer -->
    <value id="Info"/>        <!-- adjustment has an info button -->
    <value id="Menu"/>        <!-- adjustment has a required menu selection -->
    </group>

  <!-- SimpleItem group - tags associated with use of the SimpleItem template
        The "SimpleItem" template is designed to be generic. As such, it needs to be
        able to be adapted by an author in reasonable ways, and these tags allow for
        that customization.
  -->
  <group
    id="SimpleItem"
    dynamic="yes">
    <value id="width0"/>      <!-- use default width behavior for showing things when choosing -->
    <value id="CenterName"/>  <!-- center the name, instead of left-aligning it -->
    </group>

  <!-- SpecialTab group - used for sort order control on Special tab
        Every type of thing that is reported on the Special tab needs to be assigned
        a unique sort order so that all of the information shown on the Special tab
        is organized consistently for the user. This group provides an appropriate
        set of tags for that purpose.

        Since this group is used for sorting and the different types of things don't
        lend themselves to a natural sort order based on their names, we assign an
        explicit sort order value to each tag and designate the entire group as
        having an "explicit" sequencing behavior.
  -->
  <group
    id="SpecialTab"
    sequence="explicit">
    <value id="Power" order="20"/>
    <value id="Resistance" order="25"/>
    <value id="Feat" order="30"/>
    <value id="ClassFeat" name="Class Feature" order="30"/>
    <value id="RaceFeat" name="Race Feature" order="30"/>
    <value id="ThemeFeat" name="Theme Feature" order="30"/>
    <value id="Background" order="30"/>
    <value id="Theme" order="30"/>
    <value id="Item" order="30"/>
    <value id="Unknown" order="80"/>
    </group>

  <!-- Settings group - used for source settings control
        If you don't define any "source" elements, there will be no "Settings" tags
        defined, which will result in a compiler error. By defining the group here
        with a single dummy tag, you'll never run the risk of hitting that error. If
        you are certain you'll always have at least one "source" element (likely),
        then feel free to delete this group.
  -->
  <group
    id="Settings"
    dynamic="yes">
    <value id="_dummy_"/> <!-- for in case the data files don't actually define any tags of their own -->
    </group>


  <!-- ConfSource group - source of configurable abilities -->
  <group
    id="ConfSource">
    <value id="Race"/>  <!-- ability from race -->
    <value id="Class"/>  <!-- ability from class -->
    <value id="Feat"/>  <!-- ability from feat -->
    <value id="Paragon"/>  <!-- ability from paragon path -->
    <value id="EpicDest"/>  <!-- ability from epic destiny -->
    <value id="ClassSkill"/>  <!-- special tag for trained skills from classes -->
    <value id="Theme"/>  <!-- ability from theme -->
    </group>


  <!-- Tier group - tracks which tier feats are available at.
  -->
  <group
    id="Tier"
    sequence="explicit">
    <value id="Heroic" name="Heroic Tier" order="10"/>
    <value id="Paragon" name="Paragon Tier" order="20"/>
    <value id="Epic" name="Epic Tier" order="30"/>
    </group>


  <!-- PowerClass group - tracks which class a power is available for.
  -->
  <group
    id="PowerClass"
    dynamic="yes">
    <value id="Race"/> <!-- Special tag, assigned to racial powers -->
    <value id="Feat"/> <!-- Special tag, assigned to feat powers -->
    <value id="MagicItem" name="Magic Item"/> <!-- Special tag, assigned to magic item powers -->
    <value id="SkillPower" name="Skill Power"/> <!-- Special tag, assigned to magic item powers -->
    <value id="ThemePower" name="Theme Power"/> <!-- Special tag, assigned to theme powers: to be removed -->
    </group>


  <!-- PowerType group - types of powers -->
  <group
    id="PowerType"
    maxcount="1">
    <value id="Feature"/>
    <value id="BuildOpt" name="Build Option"/>
    <value id="Consumable"/>
    <value id="AtWill" name="At-Will Power" abbrev="At-Will"/>
    <value id="Encounter" name="Encounter Power" abbrev="Encounter"/>
    <value id="Daily" name="Daily Power" abbrev="Daily"/>
    <value id="DailySurge" name="Daily (Healing Surge renews)" abbrev="Daily Surge"/>
    <value id="Utility" name="Utility Power" abbrev="Utility"/>
    </group>


  <!-- PowerUse group - ways powers can be used - automatically assigned for
      feature, at-will, encounter and daily powers, but utility powers must
      have a tag assigned appropriately. -->
  <group
    id="PowerUse"
    sequence="explicit"
    maxcount="1">
    <value id="AtWill" name="At-Will Power" abbrev="At-Will" order="20"/>
    <value id="Encounter" name="Encounter Power" abbrev="Encounter" order="30"/>
    <value id="Daily" name="Daily Power" abbrev="Daily" order="40"/>
    <value id="DailySurge" name="Daily (Healing Surge renews)" abbrev="Daily Surge" order="40"/>
    <value id="Consumable" name="Consumable" order="50"/>
    <value id="Feature" name="Feature" order="60"/>
    <value id="Aura" name="Aura" order="60"/>
    </group>


  <!-- PowerOver group - overrides the tag specified in "PowerUse". -->
  <group
    id="PowerOver"
    inherit="PowerUse">
    </group>


  <!-- PowerAcc group - accessories used by powers. -->
  <group
    id="PowerAcc">
    <value id="Implement"/>
    <value id="Weapon"/>
    </group>


  <!-- DamageType group - types of damage inflicted by powers. -->
  <group
    id="DamageType">
    <value id="Acid"/>
    <value id="Cold"/>
    <value id="Fire"/>
    <value id="Force"/>
    <value id="Lightning"/>
    <value id="Necrotic"/>
    <value id="Poison"/>
    <value id="Psychic"/>
    <value id="Radiant"/>
    <value id="Thunder"/>
    </group>


  <!-- EffectType group - effects of powers. -->
  <group
    id="EffectType"
    dynamic="yes">
    <value id="Artifice"/>
    <value id="Charm"/>
    <value id="Conjur" name="Conjuration"/>
    <value id="Fear"/>
    <value id="Healing"/>
    <value id="Illusion"/>
    <value id="Poison"/>
    <value id="Polymorph"/>
    <value id="Reliable"/>
    <value id="Sleep"/>
    <value id="Stance"/>
    <value id="Teleport" name="Teleportation"/>
    <value id="Zone"/>
    <value id="Beast"/>
    <value id="Rage"/>
    <value id="Rattling"/>
    <value id="Invigorat" name="Invigorating"/>
    <value id="FullDisc" name="Full Discipline"/>
    <value id="Augment" name="Augmentable"/>
    </group>


  <!-- ActionType group - type of actions used by powers. -->
  <group
    id="ActionType"
    maxcount="1">
    <value id="Standard" name="Standard Action"/>
    <value id="Move" name="Move Action"/>
    <value id="ImmedInt" name="Immediate Interrupt"/>
    <value id="ImmedReact" name="Immediate Reaction"/>
    <value id="Minor" name="Minor Action"/>
    <value id="Free" name="Free Action"/>
    <value id="None" name="No Action"/>
    <value id="Opportun" name="Opportunity Action"/>
    </group>


  <!-- AttackType group - types of attacks used by powers. -->
  <group
    id="AttackType">
    <value id="MeleeWep" name="Melee Weapon"/>
    <value id="Melee" name="Melee"/> <!-- e.g. Melee 1 -->
    <value id="MeleeTouch" name="Melee Touch"/>
    <value id="RangeWep" name="Ranged Weapon"/>
    <value id="Range" name="Ranged"/> <!-- e.g. Ranged 10 -->
    <value id="RangeSight" name="Ranged Sight"/>
    <value id="CloseBurst" name="Close Burst"/> <!-- e.g. Close Burst 3 -->
    <value id="CloseBlast" name="Close Blast"/> <!-- e.g. Close Blast 5 -->
    <value id="Area" name="Area"/> <!-- e.g. Area 1 Within 10 Squares -->
    <value id="AreaBurst" name="Area Burst"/> <!-- e.g. Area Burst 3 Within 10 Squares -->
    <value id="AreaWall" name="Area Wall"/> <!-- e.g. Area Wall 3 Within 10 Squares -->
    <value id="Personal"/>
    </group>


  <!-- Attack group - automatically filled with one tag per attribute.
  -->
  <group
    id="Attack"
    maxcount="1"
    dynamic="yes">
    <value id="Beast" name="Beast's attack bonus"/>
    <value id="User" name="User-defined attack power"/>
    </group>


  <!-- AttackVs group - automatically filled with one tag per defense. We
      specifically define identity tags here because we need an abbreviation
      for them.
  -->
  <group
    id="AttackVs"
    maxcount="1"
    dynamic="yes">
    <value id="defAC" name="Armor Class" abbrev="AC"/>
    <value id="defFort" name="Fortitude" abbrev="Fort"/>
    <value id="defRef" name="Reflex" abbrev="Ref"/>
    <value id="defWill" name="Will" abbrev="Will"/>
    </group>


  <!-- Damage group - tags for different damages inflicted by powers. Powers
      that use a fixed damage dice do not use this group. -->
  <group
    id="Damage">
    <value id="Weapon1" name="1[W]"/>
    <value id="Weapon2" name="2[W]"/>
    <value id="Weapon3" name="3[W]"/>
    <value id="Weapon4" name="4[W]"/>
    <value id="Weapon5" name="5[W]"/>
    <value id="Weapon6" name="6[W]"/>
    <value id="Weapon7" name="7[W]"/>
    <value id="Weapon8" name="8[W]"/>
    <value id="Weapon9" name="9[W]"/>
    <value id="Beast1" name="1[B]"/>
    <value id="Beast2" name="2[B]"/>
    <value id="Beast3" name="3[B]"/>
    <value id="Beast4" name="4[B]"/>
    <value id="Beast5" name="5[B]"/>
    <value id="Beast6" name="6[B]"/>
    <value id="Beast7" name="7[B]"/>
    <value id="Beast8" name="8[B]"/>
    <value id="Beast9" name="9[B]"/>
    </group>


  <!-- PowerLink group - ways powers are linked. For example, all "Channel
      Divinity" powers have the "ChanDiv1" tag, indicating that you can only
      use 1 channel divinity power per day. The "ItemDailyX" tag is special -
      magic item powers can be used a different number of times per day,
      depending on your level. -->
  <group
    id="PowerLink"
    dynamic="yes"
    visible="no">
    <value id="ItemDailyX" name="Magic Item Daily"/>
    </group>


  <!-- Level group - used to add a level tag to the hero
  -->
  <group
    id="Level"
    minvalue="1"
    maxvalue="30">
    </group>


  <!-- Level required group - used to identify which powers you get at which levels.
  -->
  <group
    id="ReqLevel"
    minvalue="1"
    maxvalue="30">
    </group>


  <!-- Power activated at level - used to grey a feature out until you reach
      the appropriate level.
  -->
  <group
    id="AtLevel"
    minvalue="1"
    maxvalue="30">
    </group>


  <!-- Weapon required group - used to identify which magic powers can be taken
        for different weapons.
  -->
  <group
    id="ReqWep"
    dynamic="yes">
    <value id="AnyMelee" name="Any Melee"/>
    <value id="AnyRange" name="Any Ranged"/>
    <value id="AnyThrow" name="Any Thrown"/>
    </group>


  <!-- Item rarity group.
  -->
  <group
    id="Rarity"
    dynamic="yes"
    maxcount="1">
    <value id="Common"/>
    <value id="Uncommon"/>
    <value id="Rare"/>
    </group>


  <!-- Gear Type group.
  -->
  <group
    id="EquipType"
    maxcount="1"
    dynamic="yes">
    <value id="Gear"/>
    <value id="Component"/>
    <value id="Food"/>
    <value id="Drink"/>
    <value id="Ammunition"/>
    <value id="Mount"/>
    <value id="Transport" name="Transportation"/>
    </group>


  <!-- Equipped Index group - an equipped item has one of these tags on it, to
      indicate that it's equipped in the appropriate slot (normally 1, 2 or 3)
  -->
  <group
    id="EquipIndex"
    minvalue="1"
    maxvalue="10">
    </group>


  <!-- Feat group - holds identity tags for feats. We depend on the Ritual
      Caster tag being present, so we have to define it here - it'll be
      overwritten if the actual feat is defined.
  -->
  <group
    id="Feat"
    dynamic="yes">
    <value id="ftRituaCas" name="Ritual Caster"/>
    </group>


  <!-- BuildLast group - the NotBuild tag is assigned to all Configure picks,
      and then deleted from Build Option picks, to make Build Options sort last
      when the BuildLast sortset is applied.
  -->
  <group
    id="BuildLast">
    <value id="NotBuild"/>
    </group>


  <!-- ImplemType and WeaponProf groups - we have to define them here,
      otherwise they're not defined in time when various things in the
      component files look for them. The entries are added automatically using
      identity tags.
  -->
  <group
    id="ImplemType"
    dynamic="yes">
    </group>
  <group
    id="WeaponProf"
    dynamic="yes">
    </group>
  <group
    id="WepCat"
    dynamic="yes">
    </group>
  <group
    id="WepGroup"
    dynamic="yes">
    </group>

  <group
    id="Multiclass"
    dynamic="yes">
    <value id="WepMastery" name="Weapon Mastery"/>
    </group>

  <!-- Background Type &amp; Campaign -->
  <group
    id="BackType"
    dynamic="yes">
    <value id="Racial"/>
    </group>
  <group
    id="BackCamp"
    dynamic="yes">
    <value id="General"/>
    </group>
  <!-- Background Kind: to be removed -->
  <group
    id="BackKind"
    sequence="explicit">
    <value id="Theme" name="Theme" order="10"/>
    <value id="Background" name="Background" order="20"/>
    </group>


  <!-- ChooseSrc1 and ChooseSrc2 - tags used for menu selection behaviors
        The "UserSelect" component and "SimpleMenu" template orchestrate the handling
        of menu selections for individual picks within a table. The menu choices can
        be pulled from a list of things, picks on the current container, or picks on
        the hero. These tag groups allow the source to be specified for each of the
        two separate menus supported by the mechanism.
        NOTE! Omitting a tag defaults to the "Hero" behavior.
  -->
  <group
    id="ChooseSrc1"
    visible="no">
    <value id="Thing" name="All Things"/>
    <value id="Container" name="All Picks on Container"/>
    <value id="Hero" name="All Picks on Hero"/>
    </group>
  <group
    id="ChooseSrc2"
    visible="no"
    inherit="ChooseSrc1">
    </group>

  </document>
