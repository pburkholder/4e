<?xml version="1.0" encoding="ISO-8859-1"?>

<document signature="Hero Lab Data">

  <!-- Make our multiclass feats work -->
  <thing
    id="ftNovicPow"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="10000"><![CDATA[
~decrease our number of class encounter powers by 1
#resmax[resEncount] -= 1

~increase our number of multiclass encounter powers by 1
#resmax[resMCEnc] += 1
]]></eval>
    <exprreq message="Requires at least one total class encounter power"><![CDATA[
#resmax[resEncount] > 0
]]></exprreq>
    </thing>
  <thing
    id="ftAcolyPow"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="10000"><![CDATA[
~decrease our number of class utility powers by 1
#resmax[resUtility] -= 1

~increase our number of multiclass utility powers by 1
#resmax[resMCUtil] += 1
]]></eval>
    <exprreq message="Requires at least one total class utility power"><![CDATA[
#resmax[resUtility] > 0
]]></exprreq>
    </thing>
  <thing
    id="ftAdeptPow"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="10000"><![CDATA[
~decrease our number of class daily powers by 1
#resmax[resDaily] -= 1

~increase our number of multiclass daily powers by 1
#resmax[resMCDai] += 1
]]></eval>
    <exprreq message="Requires at least one total class daily power"><![CDATA[
#resmax[resDaily] > 0
]]></exprreq>
    </thing>

  <thing
    id="ftAberrSig"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Darkvision]]]>
      </eval>
    </thing>

  <thing
    id="ftAcadePro"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skDiplomac | thingid.skDungeone | thingid.skHeal | thingid.skHistory | thingid.skPercepti | thingid.skThievery)"/>
    <fieldval field="usrCandid2" value="component.Skill &amp; (thingid.skArcana | thingid.skDiplomac | thingid.skDungeone | thingid.skHeal | thingid.skHistory | thingid.skPercepti | thingid.skThievery)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.field[trtFeat].modify[+,3,""]
      perform field[usrChosen2].chosen.field[trtFeat].modify[+,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftAccurRev"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftAcolyDiv"
    name=""
    compset="">
    <eval phase="Initialize" priority="1000"><![CDATA[
      perform hero.child[skReligion].assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itOrb]
      perform hero.assign[ImplemType.itRod]

      var title as string
      var expr as string
      title = "Bonus Power"
      expr = "PowerClass.clsInvoker & PowerType.AtWill"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.assign[PowerOver.Encounter]
      ]]>
      <before name="opcExpr must be final"/>
      </eval>
    </thing>

  <thing
    id="ftAcolyVei"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAcrobati | thingid.skStealth)"/>
    <bootstrap thing="pAsnShaSte"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      ~shadow step is 1/e, not at will
      perform hero.child[pAsnShaSte].setfocus
      perform focus.delete[PowerUse.AtWill]
      perform focus.assign[PowerUse.Encounter]

      ~implement types
      perform hero.assign[ImplemType.itKiFocus]
      perform hero.assign[ImplemType.wcSimple]
      perform hero.assign[ImplemType.wgHeavyBl]
      perform hero.assign[ImplemType.wgLightBl]
      perform hero.assign[ImplemType.wpClub]
      perform hero.assign[ImplemType.wpDagger]
      perform hero.assign[ImplemType.wpJavelin]
      perform hero.assign[ImplemType.wpMace]
      perform hero.assign[ImplemType.wpSickle]
      perform hero.assign[ImplemType.wpSpear]
      perform hero.assign[ImplemType.wpSpikegau]
      ]]></eval>
    </thing>

  <thing
    id="ftAdamaStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftAdaptBre"
    name=""
    compset="">
    <arrayval field="usrArray" index="0" value="Acid"/>
    <arrayval field="usrArray" index="1" value="Cold"/>
    <arrayval field="usrArray" index="2" value="Fire"/>
    <arrayval field="usrArray" index="3" value="Lightning"/>
    <arrayval field="usrArray" index="4" value="Poison"/>
    </thing>

  <thing
    id="ftAdeptDil"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000">
      <after name="Calc attrBnBase"/>
      <![CDATA[
      ~find the power we took as our half-elf racial power
      perform hero.findchild[Power,"OptChoose.RaceCh1st & !thingid.RaceCh1st"].setfocus
      doneif (state.isfocus = 0)

      ~get the attribute being used for damage on the power, and replace it if
      ~another attribute is higher
      var text as string
      var current as number
      text = focus.tagids[DamageAttr.?]
      current = hero.findchild[Attribute,text].field[attrBnBase].value
      if (#attrbasebonus[attrCon] > current) then
        current = #attrbasebonus[attrCon]
        perform focus.delete[Attack.?]
        perform focus.delete[DamageAttr.?]
        perform focus.assign[DamageAttr.attrCon]
        perform focus.assign[Attack.attrCon]
        endif
      if (#attrbasebonus[attrWis] > current) then
        current = #attrbasebonus[attrWis]
        perform focus.delete[Attack.?]
        perform focus.delete[DamageAttr.?]
        perform focus.assign[DamageAttr.attrWis]
        perform focus.assign[Attack.attrWis]
        endif
      if (#attrbasebonus[attrCha] > current) then
        current = #attrbasebonus[attrCha]
        perform focus.delete[Attack.?]
        perform focus.delete[DamageAttr.?]
        perform focus.assign[DamageAttr.attrCha]
        perform focus.assign[Attack.attrCha]
        endif

      ~make us multiclass for that power
      text = focus.tagids[PowerClass.?]
      text = replace(text, "PowerClass", "Multiclass", 0)
      perform hero.assignstr[text]
      ]]></eval>
    </thing>

  <thing
    id="ftAerenArc"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="2">
      <before name="Daily powers multiplied"/>
      <![CDATA[
      hero.findchild[Class].field[clsUtilMl].value += 1
      ]]></eval>
    </thing>

  <thing
    id="ftAerenHal"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "DamageType.Necrotic"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftAgileBra"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pFtrComAgi" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftAgileTem"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~check if we're wielding 2 weapons - if not, do nothing
      var mainhand as number
      var offhand as number
      foreach pick in hero from WeapMelee
        if (eachpick.tagis[Helper.EqpMain] <> 0) then
          mainhand = 1
          endif
        if (eachpick.tagis[Helper.EqpOff] <> 0) then
          offhand = 1
          endif
        nexteach
      doneif (mainhand + offhand <> 2)

      ~if we're wearing anything heavier than light armor or chainmail, get out
      ~now
      foreach pick in hero from Armor where "Equipped.Equipped"
        doneif (eachpick.tagis[ArmorCat.Light] + eachpick.tagis[ArmorType.arChainmai] = 0)
        nexteach

      ~we get +1 to melee weapon damage (+2 at 21st level)
      foreach pick in hero from WeapMelee
        if (hero.tagvalue[Level.?] >= 21) then
          perform eachpick.field[wpDamage].modify[+,2,""]
        else
          perform eachpick.field[wpDamage].modify[+,1,""]
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftAlcheBlo"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.DamageType &amp; (thingid.dtCold | thingid.dtAcid | thingid.dtFire | thingid.dtLightn | thingid.dtNecrotic | thingid.dtPoison | thingid.dtPsychic)"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif

      var expr as string
      expr = field[usrChosen1].chosen.tagids[DamageType.?, " | "]
      foreach pick in hero from Power where expr
        perform eachpick.field[pwDamBonus].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftAlchemis"
    name=""
    compset="">
    <fieldval field="usrChkText" value="Replaces Ritual Caster"/>
    <evalrule index="1" phase="Setup" priority="400"
      message="Ritual Caster feat not added as class / race feature">
      <before name="Feat tag final"/>
      <![CDATA[
      ~if not replacing the ritual caster feat, nothing to do
      validif (field[usrIsCheck].value = 0)

      ~make sure we have the ritual caster feat (so we can add alchemy stuff),
      ~even though we're about to disable it
      perform hero.assign[Feat.ftRituaCas]

      ~otherwise, find a Ritual Caster feat added by a race / class and disable
      ~it, then take our feat slot back
      perform hero.findchild[Feat,"thingid.ftRituaCas & !thing.user_added"].setfocus
      doneif (state.isfocus = 0)

      perform focus.assign[Helper.Disable]
      hero.child[resFeats].field[resSpent].value -= 1
      @valid = 1
      ]]></evalrule>
    </thing>

  <thing
    id="ftAlertnes"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftApesRea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftAncieSou"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      perform hero.childfound[pRacDraBre].assign[PowerSrc.Arcane]
      ]]></eval>
    </thing>

  <thing
    id="ftAnimaEmp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftArcanAdm"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Arcane"/>
    <arrayval field="usrArray" index="0" value="Acid"/>
    <arrayval field="usrArray" index="1" value="Cold"/>
    <arrayval field="usrArray" index="2" value="Fire"/>
    <arrayval field="usrArray" index="3" value="Lightning"/>
    <arrayval field="usrArray" index="4" value="Thunder"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assignstr["DamageType." & field[usrSelect].text]
      ]]></eval>
    </thing>

  <thing
    id="ftArcanAeg"
    name=""
    compset="">
    <eval phase="Initialize" priority="1000"><![CDATA[
      var title as string
      var expr as string
      title = "Aegis Power"
      expr = "PowerClass.clsSwordma & PowerType.Feature"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.assign[PowerOver.Encounter]
      ]]>
      <before name="opcExpr must be final"/>
      </eval>
    </thing>

  <thing
    id="ftArcanImp"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="thingid.itOrb | thingid.itRod | thingid.itStaff | thingid.itStaff | thingid.itWand | thingid.wgHeavyBl | thingid.wgLightBl | thingid.wpDagger"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      if (field[usrChosen1].ischosen <> 0) then
        perform hero.assignstr["ImplemType." & field[usrChosen1].chosen.idstring]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftArcanIni"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <before name="opcExpr must be final"/>
      <![CDATA[
      perform hero.child[skArcana].assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itOrb]
      perform hero.assign[ImplemType.itStaff]
      perform hero.assign[ImplemType.itWand]

      var title as string
      var expr as string
      title = "Bonus Power"
      expr = "PowerClass.clsWizard & PowerType.AtWill"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change it to an encounter power
      perform focus.delete[PowerType.AtWill]
      perform focus.assign[PowerType.Encounter]

      ~ignore any errors about requiring other classes
      perform focus.assign[thing.skipprereq]
      ]]></eval>
    </thing>

  <thing
    id="ftArcanPro"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform hero.child[skArcana].assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itStaff]
      ]]></eval>
    </thing>

  <thing
    id="ftArcanRes"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.findchild[Power,"PowerType.Encounter & PowerSrc.Arcane & !Helper.Activated & !Hide.Special"].setfocus
      if (state.isfocus = 0) then
        foreach pick in hero from Power where "PowerType.AtWill & PowerSrc.Arcane"
          perform eachpick.field[pwDamBonus].modify[+,2,""]
          nexteach
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftArcanRit"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Ritual"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform field[usrChosen1].chosen.assign[RitualSkl.skArcana]
      ]]></eval>
    </thing>

  <thing
    id="ftArcanVam"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftArkhoStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftArmorBur"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      ~ignore if partial
      perform hero.child[pInvArmWra].assign[DamageType.Fire]
      ]]></eval>
    </thing>

  <thing
    id="ftArmorEnd"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      foreach pick in hero from Skill
        if (eachpick.islinkage[attribute] <> 0) then
          if (eachpick.linkage[attribute].tagexpr[thingid.attrStr | thingid.attrCon] <> 0) then
            perform eachpick.assign[Helper.NoArmorChk]
            endif
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftArmorFin"
    name=""
    compset="">
    <eval phase="Traits" priority="1000">
      perform hero.assign[Hero.NoArmorChk]

      <before name="Armor effects final"/>
      </eval>
    </thing>

  <thing
    id="ftArmorSwi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      foreach pick in hero from Skill
        if (eachpick.islinkage[attribute] <> 0) then
          if (eachpick.linkage[attribute].tagis[thingid.attrDex] <> 0) then
            perform eachpick.assign[Helper.NoArmorChk]
            endif
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftArmorWar"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="5000">
      <before name="Calc trtFinal"/>
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apScale]
      #traitmodify[trSurges,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftArPrBan"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apBanded]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apBanded]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrBrb"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apShieldBr]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apShieldBr]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrCha"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apChain]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apChain]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrFPl"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apFullPlat]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apFullPlat]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrHid"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apHide]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apHide]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrLea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apLeather]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apLeather]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrPla"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apPlate]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apPlate]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrRin"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apRing]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apRing]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrSca"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apScale]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apScale]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrSpk"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apSpiked]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apSpiked]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrSpl"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apSplint]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apSplint]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArPrStu"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apStudded]
      ]]></eval>
    <prereq message="Already proficient with this armor.">
      <validate><![CDATA[
        validif (@ispick <> 0)
        @valid = !hero.tagis[ArmorProf.apStudded]
        ]]></validate>
      </prereq>
    </thing>

  <thing
    id="ftArSpCha"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      var isbonus as number
      isbonus = 0
      foreach pick in hero from Armor where "ArmorType.arChainmai"
        if (isbonus = 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            #traitmodify[defAC,trtFeat,1,""]
            isbonus = 1
            endif
          endif
        if (eachpick.field[arCheck].value < 0) then
          eachpick.field[arCheck].value += 1
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftArSpHid"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      var isbonus as number
      isbonus = 0
      foreach pick in hero from Armor where "ArmorType.arHideArm"
        if (isbonus = 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            #traitmodify[defAC,trtFeat,1,""]
            isbonus = 1
            endif
          endif
        if (eachpick.field[arCheck].value < 0) then
          eachpick.field[arCheck].value += 1
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftArSpPla"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      var isbonus as number
      isbonus = 0
      foreach pick in hero from Armor where "ArmorType.arPlateArm"
        if (isbonus = 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            #traitmodify[defAC,trtFeat,1,""]
            isbonus = 1
            endif
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftArSpSca"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      var isbonus as number
      isbonus = 0
      foreach pick in hero from Armor where "ArmorType.arScaleArm"
        if (isbonus = 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            #traitmodify[defAC,trtFeat,1,""]
            isbonus = 1
            endif
          endif
        if (eachpick.field[arSpeed].value < 0) then
          eachpick.field[arSpeed].value = 0
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftAstraFir"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "(DamageType.Fire | DamageType.Radiant)"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftAudacCro"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skThievery,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftAutohypn"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="5000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSurges,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftAvengOpp"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftAvernEmi"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftAwakeGod"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="(component.BuildOpt) &amp; (BuildOpt.fInvDivCov)"/>
    <eval index="1" phase="Setup" priority="100" name="Build option activated"><![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.ChosenOpt]
      ]]></eval>
    </thing>

  <thing
    id="ftAwakePot"
    name=""
    compset="">
    <bootstrap thing="fArdPsiAug" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #trkmax[trkPower] += 1
      ]]></eval>
    </thing>

  <thing
    id="ftAxeExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgAxe"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBaalzDes"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftBaelTur"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist Fire 8 + level
      var bonus as number
      bonus = 8 + hero.tagvalue[Level.?]
      #traitmodify[rsFire,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBalicPra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDiplomac,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBardiDil"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill &amp; !(thingid.skEnduranc | thingid.skStealth | thingid.skThievery)"/>
    <bootstrap thing="pBrdMajWor">
      <autotag group="PowerOver" tag="Daily"/>
      <assignval field="spcMax" value="1"/>
      </bootstrap>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itWand]
      ]]></eval>
    </thing>

  <thing
    id="ftBardiKno"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skArcana,trtFeat,2,""]
      #traitmodify[skDungeone,trtFeat,2,""]
      #traitmodify[skHistory,trtFeat,2,""]
      #traitmodify[skNature,trtFeat,2,""]
      #traitmodify[skReligion,trtFeat,2,""]
      #traitmodify[skStreetwi,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBardiRit"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fBrdBarTra" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skArcana].assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itWand]
      ]]></eval>
    </thing>

  <thing
    id="ftBardAll"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="23000">
      <before name="Derived trtFinal"/>
      <after name="Calc sklTrained"/>
      <![CDATA[
      foreach pick in hero from Skill where "!Helper.Trained?"
        perform eachpick.field[trtFeat].modify[+,3,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBattlewi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.child[trInit].assign[LinkAttr.attrWis]
      ]]></eval>
    </thing>

  <thing
    id="ftBattlAcu"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fFtrComSup" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftBattlAwa"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skStreetwi)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBattlCle"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.WeaponBase &amp; !Equipment.Natural &amp; !component.MagicItem &amp; !thingid.wpMagic? &amp; WepCat.wcMilitary"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apShieldLg]
      perform field[usrChosen1].chosen.forward[WeaponProf.?]
      ]]></eval>
    </thing>

  <thing
    id="ftBattlHar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Initiative
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBattlIns"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fWrlComLea" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftBattlInt"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Initiative
      #traitmodify[trInit,trtFeat,2,""]
      perform hero.child[trInit].assign[LinkAttr.attrWis]
      ]]></eval>
    </thing>

  <thing
    id="ftBattlPsi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      foreach pick in hero from Power where "PowerClass.clsPsion & PowerType.AtWill & (DamageType.Force | DamageType.Psychic)"
        perform eachpick.field[pwDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBeastFor"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBeastTra"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill"/>
    </thing>

  <thing
    id="ftBecomer"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Race"/>
    <fieldval field="usrCandid2" value="component.Skill"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="100" name="Build option activated"><![CDATA[
      perform field[usrChosen2].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBerseFur"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skAcrobati | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skNature | thingid.skPercepti)"/>
    <tag group="PowerUse" tag="Daily"/>
    <eval index="1" phase="Setup" priority="100" name="Build option activated"><![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBlackStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBlackKil"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBladeBuc"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      ~bonus to defenses if using light shield
      if (hero.haschild[ArmorBase,"Equipped.Equipped & ArmorType.arLightShi"] <> 0) then
        #traitmodify[defAC,trtBonus,1,""]
        #traitmodify[defRef,trtBonus,1,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftBladeIni"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skArcana].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBloodDev"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftBloodEnm"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftBloodFer"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftBloodGor"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftBloodLev"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      bonus = #halflevel[]
      #traitmodify[rsCold,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBloodPac"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="10000">
      <after name="Calc attrBonus"/>
      <![CDATA[
      doneif (activated = 0)

      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from Power where "PowerClass.clsWarlock & Attack.attrCon"
        perform eachpick.field[pwDamBonus].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBloodPas"
    name=""
    compset="">
    <eval phase="Initialize" priority="1000"><![CDATA[
      var title as string
      var expr as string
      title = "Mantle Power"
      expr = "PowerClass.clsArdent & PowerType.Feature & !thingid.pArdArdSur"
      call MultChoice
      doneif (state.isfocus = 0)
      ]]>
      <before name="opcExpr must be final"/>
      </eval>
    </thing>

  <thing
    id="ftBlowgTra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpBlowgun]
      foreach pick in hero from WeaponBase where "thingid.wpBlowgun"
        eachpick.field[wpShort].value = 10
        eachpick.field[wpLong].value = 20
        perform eachpick.assign[WepProp.HighCrit]
        perform eachpick.delete[WepProp.LoadMinor]
        perform eachpick.assign[WepProp.LoadFree]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBludgExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgHammer | WepGroup.wgMace"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBodyFue"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftBogtaHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBogtaWar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      perform hero.assign[WeaponProf.wpBlowgun]
      foreach pick in hero from WeaponBase where "thingid.wpBlowgun"
        perform eachpick.delete[WepDamage.?]
        perform eachpick.assign[WepDamage.1d6]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBolaTra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpBola]
      ]]></eval>
    </thing>

  <thing
    id="ftBornin"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDungeone,trtRacial,2,""]
      perform hero.assign[Vision.Lowlight]
      ]]></eval>
    </thing>

  <thing
    id="ftBowExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgBow"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBravo"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skIntimida].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBravuLea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBrawlGua"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~check if we're wielding a weapon in our main hand, but not in our off-
      ~hand
      var mainhand as number
      var offhand as number
      foreach pick in hero from WeapMelee
        if (eachpick.tagis[Helper.EqpMain] <> 0) then
          mainhand = 1
          endif
        if (eachpick.tagis[Helper.EqpOff] <> 0) then
          offhand = 1
          endif
        nexteach
      doneif (mainhand + !offhand <> 2)

      ~+1 shield bonus to AC and reflex
      #traitmodify[defAC,trtShield,1,""]
      #traitmodify[defRef,trtShield,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBrawlWar"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skStreetwi)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftBreatGod"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDiplomac,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBredBat"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtRacial,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBrokeSha"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defWill,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftBrutaBra"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~increase unarmed and gauntlet damage by one die
      foreach pick in hero from WeaponBase where "WepGroup.wgUnarmed"
        perform eachpick.field[wpDamDice].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftBurniBli"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "(DamageType.Acid | DamageType.Cold)"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftButchLur"
    name=""
    compset="">
    <bootstrap thing="pWizGhoSou">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    </thing>

  <thing
    id="ftChainAgi"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <![CDATA[
      var isbonus as number
      isbonus = 0
      foreach pick in hero from Armor where "ArmorType.arChainmai"
        if (eachpick.field[arSpeed].value < 0) then
          eachpick.field[arSpeed].value = 0
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftChampBlo"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      #traitmodify[skStreetwi,trtFeat,2,""]
      perform hero.child[skStreetwi].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftChannFai"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pClrDivFor"/>
    <bootstrap thing="pClrTurUnd"/>
    </thing>

  <thing
    id="ftChannInv"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pInvArmWra" phase="***NOPARTIAL***"/>
    <bootstrap thing="pInvPreReb" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftChannVal"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pPalDivMet"/>
    <bootstrap thing="pPalDivStr"/>
    </thing>

  <thing
    id="ftChannVen"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pAveAbjUnd"/>
    <bootstrap thing="pAveDivGui"/>
    </thing>

  <thing
    id="ftChillGra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      ~ignore if partial
      perform hero.child[pRacDarRea].assign[DamageType.Cold]
      ]]></eval>
    </thing>

  <thing
    id="ftChondMys"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftClawFig"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="wpClawFig"/>
    </thing>
  <thing id="wpClawFig" name="Gnoll Claws" compset="Melee">
    <fieldval field="wpProf" value="3"/>
    <tag group="Equipment" tag="Natural"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="WepDamage" tag="1d6"/>
    <tag group="WepCat" tag="wcSimple"/>
    <tag group="WepProp" tag="OffHand"/>
    <tag group="WepGroup" tag="wgLightBl"/>
    </thing>

  <thing
    id="ftClutcDar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      ~ignore if partial
      hero.childfound[pRacCloDar].field[pwRange1].text = "2"
      hero.childfound[pRacDarkfi].field[pwRange1].text = "15"
      ]]></eval>
    </thing>

  <thing
    id="ftColdAda"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist many 2/3/5
      var bonus as number
      if (#level[] <= 10) then
        bonus = 5
      elseif (#level[] <= 20) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsCold,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftCombaCom"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="10000">
      <before name="Derived trtFinal"/>
      <after name="Calc attrBonus"/>
      <![CDATA[
      var bonus as number
      bonus = maximum(#attrbonus[attrCha],#attrbonus[attrInt])
      bonus -= 2
      if (bonus > 0) then
        #traitmodify[trInit,trtBonus,bonus,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftConcuBre"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      perform hero.childfound[pRacDraBre].assign[DamageType.Thunder]
      perform hero.childfound[pRacDraBre].assign[DamageType.Lightning]
      ]]></eval>
    </thing>

  <thing
    id="ftCouraMin"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtBonus,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftCouraSho"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fRgrPriSho" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftCovenIo"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      perform hero.childfound[pRacDraBre].assign[PowerSrc.Divine]
      ]]></eval>
    </thing>

  <thing
    id="ftCriteBal"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,1,""]
      #traitmodify[skAthletic,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftCritiRes"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftCrossCas"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[ImplemType.wgCrossbow]
      ]]></eval>
    </thing>

  <thing
    id="ftCrossExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgCrossbow"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftCrowsFli"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftCutthroa"
    name=""
    compset="">
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skStealth].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftCycloWar"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skStreetwi)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftDarkeSou"
    name=""
    compset="">
    <bootstrap thing="pAsnShaFor"/>
    </thing>

  <thing
    id="ftDarkFur"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "(DamageType.Necrotic | DamageType.Psychic)"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDarknWin"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Darkvision]]]>
      </eval>
    </thing>

  <thing
    id="ftDaughPro"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="100"><![CDATA[
      ~ignore if partial
      ~hide our normal eldritch pact
      perform hero.childfound[fWlkEldPac].setfocus
      doneif (state.isfocus = 0)
      perform focus.assign[Hide.Special]
      perform focus.field[usrChosen1].chosen.assign[Hide.Special]
      ]]></eval>
    </thing>

  <thing
    id="ftDeadeSli"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      foreach pick in hero from WeaponBase where "thingid.wpSling"
        eachpick.field[wpProf].value = 3
        perform eachpick.assign[WepProp.HighCrit]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDeadlAxe"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "WepGroup.wgAxe"
        if (eachpick.tagis[WepProp.HighCrit] = 0) then
          perform eachpick.assign[WepProp.HighCrit]
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDeepSag"
    name=""
    compset="">
    <bootstrap thing="lanDeepSpe" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftDefiaFir"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftDefiaLig"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      #traitmodify[rsNecrotic,rsTotal,5,""]
      #traitmodify[rsRadiant,rsTotal,5,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDelthSai"
    name=""
    compset="">
    <bootstrap thing="lanPrimord" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftDemanRea"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="100"><![CDATA[
      hero.childfound[pBmnBatDem].field[pwRange1].text = "5"
      ]]></eval>
    </thing>

  <thing
    id="ftDemanTal"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skBluff | thingid.skDiplomac | thingid.skDungeone | thingid.skHistory | thingid.skInsight | thingid.skIntimida | thingid.skPercepti)"/>
    <bootstrap thing="pBmnBatDem">
      <autotag group="PowerOver" tag="Encounter"/>
      </bootstrap>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itOrb]
      perform hero.assign[ImplemType.itStaff]
      ]]></eval>
    </thing>

  <thing
    id="ftDeserStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDevotPal"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSurges,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDisciDiv"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skReligion].assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itHolySym]
      ]]></eval>
    </thing>

  <thing
    id="ftDisciLor"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="23000">
      <before name="Derived trtFinal"/>
      <after name="Calc sklTrained"/>
      <![CDATA[
      foreach pick in hero from Skill where "Helper.Trained?"
        perform eachpick.field[trtFeat].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDisciSha"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Darkvision]]]>
      </eval>
    </thing>

  <thing
    id="ftDisciTal"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skBluff | thingid.skDiplomac | thingid.skDungeone | thingid.skHistory | thingid.skInsight | thingid.skIntimida | thingid.skPercepti)"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itOrb]
      perform hero.assign[ImplemType.itStaff]

      var title as string
      var expr as string
      title = "Psion Power"
      expr = "PowerClass.clsPsion & PowerType.AtWill & ReqLevel.1"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power that's not augmentable
      perform focus.delete[EffectType.Augment]
      perform focus.delete[PowerType.AtWill]
      perform focus.assign[PowerType.Encounter]
      ]]></eval>
    </thing>

  <thing
    id="ftDispaIro"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[defWill,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDivinHea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fClrHeaLor" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skHeal].assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itHolySym]
      ]]></eval>
    </thing>

  <thing
    id="ftDivinSec"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skHistory | thingid.skReligion)"/>
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fInvRitCas" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itRod]
      perform hero.assign[ImplemType.itStaff]
      ]]></eval>
    </thing>

  <thing
    id="ftDivinVam"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftDoomJik"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDracoSpc"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 14) then
        bonus = 1
      elseif (#level[] <= 24) then
        bonus = 2
      else
        bonus = 3
        endif

      var breath as string
      breath = hero.child[drgBrthTyp].field[usrSelect].text
      foreach pick in hero from Power where "DamageType." & breath
        perform eachpick.field[pwAtkFeat].modify[+,bonus,""]
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDragoSen"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,1,""]
      perform hero.assign[Vision.Lowlight]
      ]]></eval>
    </thing>

  <thing
    id="ftDragoSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacDraBre" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftDrajiAsp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDrajiPal"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDreadSak"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDrownNha"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skArcana,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDrowSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacCloDar" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    <bootstrap thing="pRacDarkfi" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftDualImp"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      var mainhand as number
      var offhand as number
      var offbonus as number
      foreach pick in hero from Gear where "ImplemType.? & Equipped.Equipped"
        if (eachpick.tagis[Helper.EqpMain] <> 0) then
          mainhand = 1
        elseif (eachpick.tagis[Helper.EqpOff] <> 0) then
          offhand = 1
          if (eachpick.tagis[component.MagicItem] <> 0) then
            offbonus = eachpick.field[mgBonus].value
            endif
          endif
        nexteach
      if (mainhand + offhand = 2) then
        foreach pick in hero from Power where "PowerSrc.Arcane"
          perform eachpick.field[pwDamBonus].modify[+,offbonus,""]
          nexteach
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftDualStr"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif

      foreach pick in hero from Power where "DamageType.Psychic"
        perform eachpick.field[pwDamBonus].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDueliPan"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="10000">
      <before name="Derived trtFinal"/>
      <after name="Calc attrBonus"/>
      <![CDATA[
      var bonus as number
      bonus = #attrbasebonus[attrCha]
      if (bonus > 0) then
        #traitmodify[skAcrobati,trtFeat,bonus,""]
        #traitmodify[skAthletic,trtFeat,bonus,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftDurable"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSurges,trtBonus,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDuskWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqSim.wgLightBl]
      perform hero.assign[WpGrpRqMil.wgLightBl]
      var bonus as number
      if (#level[] < 11) then
        bonus = 2
      elseif (#level[] < 21) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from WeaponBase where "((WepCat.wcSimple | WepCat.wcMilitary) & WepGroup.wgLightBl)"
        perform eachpick.field[wpDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDwarfSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacDwaRes" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftDwarvDur"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000">
      <before name="Derived trtFinal"/>
      <after name="Calc attrBonus"/>
      <![CDATA[
      #traitmodify[trSurges,trtBonus,2,""]

      var bonus as number
      bonus = #attrbasebonus[attrCon]
      #traitmodify[trSurgeVal,trtBonus,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftDwarvWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqSim.wgAxe]
      perform hero.assign[WpGrpRqMil.wgAxe]
      perform hero.assign[WpGrpRqSup.wgAxe]
      perform hero.assign[WpGrpRqSim.wgHammer]
      perform hero.assign[WpGrpRqMil.wgHammer]
      perform hero.assign[WpGrpRqSup.wgHammer]
      foreach pick in hero from WeaponBase where "(WepGroup.wgAxe | WepGroup.wgHammer)"
        perform eachpick.field[wpDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftDvnHlt"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="10000">
      <after name="Calc attrBonus"/>
      <![CDATA[
      ~resist Poison half level + Wisdom bonus
      var bonus as number
      bonus = #halflevel[] + #attrbasebonus[attrWis]
      #traitmodify[rsPoison,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEarthDee"
    name=""
    compset="">
    <bootstrap thing="lanDeepSpe" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist Necrotic 2/3/5
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 5
        endif
      #traitmodify[rsFire,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEfforDil"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftEladrSol"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqSim.wgSpear]
      perform hero.assign[WpGrpRqMil.wgSpear]
      perform hero.assign[WpGrpRqSup.wgSpear]
      foreach pick in hero from WeaponBase where "(thingid.wpLongswor | WepGroup.wgSpear)"
        perform eachpick.field[wpDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftEladrSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacFeySte" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftEladrSwo"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      perform hero.assign[ImplemType.wpLongswor]
      ]]></eval>
    </thing>

  <thing
    id="ftEldaaGua"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftElemeBla"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      var types as string
      types = "(DamageType.Acid | DamageType.Cold | DamageType.Fire | DamageType.Lightning | DamageType.Thunder)"
      foreach pick in hero from Power where "PowerClass.clsSwordma & " & types
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftElemeEmp"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="10000">
      <before name="Power attack final"/>
      <after name="Calc attrBonus"/>
      <![CDATA[
      var bonus as number
      bonus = hero.child[attrStr].field[attrBonus].value
      var types as string
      types = "(DamageType.Acid | DamageType.Cold | DamageType.Fire | DamageType.Lightning | DamageType.Thunder)"
      foreach pick in hero from Power where "PowerClass.clsWizard & " & types
        perform eachpick.field[pwDamBonus].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftElemeGua"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~fire / storm / wind: increase resist value by 5
      if (hero.child[fRGeFiresl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[rsFire,rsExtra,5,""]
      elseif (hero.child[fRGeStorsl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[rsLightn,rsExtra,5,""]
      elseif (hero.child[fRGeWindsl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[rsCold,rsExtra,5,""]

      ~earthsoul gets another +1 to saves
      elseif (hero.child[fRGeEartsl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[trSave,trtBonus,1,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftElfSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacElvAcc" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftElsirStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEmpowDra"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      hero.childfound[pRacDraBre].field[pwDamBase].text = "1d10"
      ]]></eval>
    </thing>

  <thing
    id="ftEmpowRea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      ~ignore if partial
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 4
      else
        bonus = 6
        endif
      perform hero.childfound[pRacDarRea].field[pwDamFeat].modify[+,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEncouShi"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="20000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform hero.findchild[Shield,"Equipped.Equipped"].setfocus
      doneif (state.isfocus = 0)
      #traitmodify[defWill,trtShield,focus.field[arAC].value,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEndurFur"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftEndurMou"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trSurgeVal,trtBonus,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEnvoyto"
    name=""
    compset="">
    <bootstrap thing="lanElven" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftEpicFor"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defFort,trtFeat,4,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEpicRef"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defRef,trtFeat,4,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEpicWil"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defWill,trtFeat,4,""]
      ]]></eval>
    </thing>

  <thing
    id="ftEscapArt"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftExpanSpe"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="2">
      <before name="Daily powers multiplied"/>
      <![CDATA[
      hero.childfound[clsWizard].field[clsDailyMl].value += 1
      ]]></eval>
    </thing>

  <thing
    id="ftExperCom"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftExtenAre"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.WeaponBase &amp; !Equipment.Natural &amp; !component.MagicItem &amp; !thingid.wpMagic?"/>
    <fieldval field="usrCandid2" value="component.WeaponBase &amp; !Equipment.Natural &amp; !component.MagicItem &amp; !thingid.wpMagic?"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (activated = 0)

      ~add proficiency with our selected arena weapons
      perform field[usrChosen1].chosen.forward[WeaponProf.?]
      perform field[usrChosen2].chosen.forward[WeaponProf.?]
      ]]></eval>
    </thing>

  <thing
    id="ftExtraMan"
    name=""
    compset=""
    uniqueness="none">
    <arrayval field="usrArray" index="0" value="Earthsoul"/>
    <arrayval field="usrArray" index="1" value="Firesoul"/>
    <arrayval field="usrArray" index="2" value="Stormsoul"/>
    <arrayval field="usrArray" index="3" value="Watersoul"/>
    <arrayval field="usrArray" index="4" value="Windsoul"/>
    </thing>

  <thing
    id="ftEyesDyi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Darkvision]]]>
      </eval>
    </thing>

  <thing
    id="ftFarRea"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftFarSho"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "(WepGroup.wgBow | WepGroup.wbCrossbow)"
        eachpick.field[wpShort].value += 5
        eachpick.field[wpLong].value += 5
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFarTho"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftFarThr"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "(WepProp.LightThrow | WepProp.HeavyThrow)"
        eachpick.field[wpShort].value += 2
        eachpick.field[wpLong].value += 2
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFavorRaa"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skStreetwi,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFearsHos"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFeralFey"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftFerveTal"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skAthletic | thingid.skBluff | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skInsight | thingid.skIntimida | thingid.skStreetwi)"/>
    <bootstrap thing="pArdArdSur"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      perform hero.child[pArdArdSur].delete[PowerUse.?]
      perform hero.child[pArdArdSur].assign[PowerUse.Daily]
      ]]></eval>
    </thing>

  <thing
    id="ftFeyBla"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~check if we're wielding only light blades or heavy blades
      var light as number
      var heavy as number
      foreach pick in hero from WeapMelee where "Equipped.Equipped"
        light += eachpick.tagis[WepGroup.wgLightBl]
        heavy += eachpick.tagis[WepGroup.wgHeavyBl]
        nexteach
      if (light + heavy < 2) then
        doneif (heavy < 1)
        endif
      foreach pick in hero from WeapMelee where "Equipped.Equipped & (WepGroup.wgLightBl | WepGroup.wgHeavyBl)"
        perform eachpick.field[wpDamage].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFeyboCha"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      #traitmodify[skBluff,trtFeat,1,""]
      #traitmodify[skDiplomac,trtFeat,1,""]
      var bonus as number
      if (#level[] < 15) then
        bonus = 1
      elseif (#level[] < 25) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "PowerSrc.Arcane & EffectType.Charm"
        perform eachpick.field[pwAtkFeat].modify[+,bonus,""]
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFeySen"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFeyMinde"
    name=""
    compset="">
    <bootstrap thing="lanElven" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftFicklSer"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFightOn"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="spcUsed bounded"/>
      <![CDATA[
      hero.childfound[pWrlInsWor].field[spcMax].value += 1
      ]]></eval>
    </thing>

  <thing
    id="ftFightWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      ~ignore if partial
      var expr as string

      ~one-handed weapons
      if (hero.childfound[fFtrOneWea].tagis[Helper.ChosenOpt] <> 0) then
        expr = "!WepProp.Double & !Equipment.TwoHand"

      ~two-handed weapons
      elseif (hero.childfound[fFtrTwoWea].tagis[Helper.ChosenOpt] <> 0) then
        expr = "Equipment.TwoHand"

      ~tempest technique - wielding 2 weapons
      elseif (hero.childfound[fFtrTemTec].tagis[Helper.ChosenOpt] <> 0) then
        doneif (hero.haschild[WeapMelee,"Helper.EqpMain"] + hero.haschild[WeapMelee,"Helper.EqpOff"] <> 2)
        expr = "!Equipment.TwoHand"

      ~battlerager vigor - some weapon groups
      elseif (hero.childfound[fFtrBatVig].tagis[Helper.ChosenOpt] <> 0) then
        expr = "WepGroup.wgAxe | WepGroup.wgHammer | WepGroup.wgMace | WepGroup.wgPick"

      ~brawler style - weapon in primary hand
      elseif (hero.childfound[fFtrBraSty].tagis[Helper.ChosenOpt] <> 0) then
        expr = "!WepProp.Double & !Equipment.TwoHand"
        endif

      foreach pick in hero from WeaponBase where expr
        perform eachpick.field[wpDamage].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFireqAsp"
    name=""
    compset="">
    <bootstrap thing="lanDeepSpe" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist Fire 2/5/8
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 5
      else
        bonus = 8
        endif
      #traitmodify[rsFire,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFirstIn"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fRogFirStr" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftFlailExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgFlail"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFleetFoo"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSpeed,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFluidMot"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      else
        bonus = 2
        endif
      #traitmodify[trSpeed,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFoamgWar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpNet]
      foreach pick in hero from WeaponBase where "thingid.wpNet"
        perform eachpick.field[wpAtkFeat].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftFocusExp"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.WeaponBase &amp; !Equipment.Natural &amp; !component.MagicItem &amp; !thingid.wpMagic?"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    </thing>

  <thing
    id="ftFocusTal"
    name=""
    compset="">
    <eval phase="Initialize" priority="1000"><![CDATA[
      var title as string
      var expr as string
      title = "Psion Discipline"
      expr = "BuildOpt.fPsiDisFoc & !thingid.fPsiDisFoc"
      call MultChoice
      doneif (state.isfocus = 0)

      ~activate the discipline to boostrap its child powers
      focus.field[boActive].value = 1

      ~turn all the child powers into daily powers
      foreach pick in hero from Power where "PowerClass.clsPsion & PowerType.Feature"
        if (eachpick.tagis[thing.user_added] = 0) then
          perform eachpick.delete[PowerUse.?]
          perform eachpick.assign[PowerUse.Daily]
          perform eachpick.assign[thing.skipprereq]
          endif
        nexteach
      ]]>
      <before name="opcExpr must be final"/>
      </eval>
    </thing>

  <thing
    id="ftForgeHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist many 2/3/5
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 5
        endif
      #traitmodify[rsAcid,rsTotal,bonus,""]
      #traitmodify[rsCold,rsTotal,bonus,""]
      #traitmodify[rsFire,rsTotal,bonus,""]
      #traitmodify[rsLightn,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftForgeRag"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFourWin"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFrozeSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      var resist as number
      var will as number
      if (#level[] <= 10) then
        resist = 5
        will = 1
      elseif (#level[] <= 20) then
        resist = 10
        will = 2
      else
        resist = 15
        will = 3
        endif
      #traitmodify[rsCold,rsTotal,resist,""]
      #traitmodify[defWill,trtFeat,will,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFulfiVow"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftFurioDem"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 intimidate
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFurtiSig"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 bluff
      #traitmodify[skBluff,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftFyCmp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,1,""]
      #traitmodify[skPercepti,trtFeat,1,""]
      #traitmodify[skStreetwi,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGarroTra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpGarrote]
      ]]></eval>
    </thing>

  <thing
    id="ftGazeRui"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGenasFir"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[rsFire,rsExtraPre,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGenasFro"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[rsCold,rsExtraPre,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGestaAnc"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSpeed,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGiftEte"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftGithzBla"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqMil.wgHeavyBl]
      perform hero.assign[WeaponProf.wpBastaswo]
      perform hero.assign[WeaponProf.wpFullblad]
      var bonus as number
      if (#level[] < 11) then
        bonus = 2
      elseif (#level[] < 21) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgHeavyBl | WeaponProf.wpBastaswo | WeaponProf.wpFullblad"
        perform eachpick.field[wpDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftGlasyCha"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      foreach pick in hero from Power where "EffectType.Charm"
        perform eachpick.field[pwAtkFeat].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftGloriCha"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftGloriVic"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftGnomePha"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      #traitmodify[skBluff,trtFeat,1,""]
      #traitmodify[skDiplomac,trtFeat,1,""]
      var bonus as number
      if (#level[] < 15) then
        bonus = 1
      elseif (#level[] < 25) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "PowerSrc.Arcane & EffectType.Illusion"
        perform eachpick.field[pwAtkFeat].modify[+,bonus,""]
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftGnomeSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacFadAwa" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftGnomeWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqMil.wgHammer]
      perform hero.assign[WpGrpRqMil.wgPick]
      perform hero.assign[WpGrpRqSim.wgHammer]
      perform hero.assign[WpGrpRqSim.wgPick]
      var bonus as number
      if (#level[] < 11) then
        bonus = 2
      elseif (#level[] < 21) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from WeaponBase where "(WepGroup.wgHammer | WepGroup.wgPick) & (WepCat.wcSimple | WepCat.wcMilitary)"
        perform eachpick.field[wpDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftGodswAla"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswAss"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswAva"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswBul"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswDef"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswFat"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswMen"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswMys"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswRad"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswSid"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGodswTid"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGoliaSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacStoEnd" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftGraspMag"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skThievery,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGreatFor"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      #traitmodify[defFort,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftGreathor"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      ~ignore if partial
      hero.child[pRacGorCha].field[pwDamBase].text = "1d8"
      ]]></eval>
    </thing>

  <thing
    id="ftGulgHun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHafteDef"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      doneif (hero.haschild[WeaponBase,"Equipped.Equipped & Equipment.TwoHand & (WepGroup.wgPolearm | WepGroup.wgStaff)"] = 0)

      #traitmodify[defAC,trtShield,1,""]
      #traitmodify[defRef,trtShield,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHalfESou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fRHaDilett" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftHalfESpi"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftHalflFas"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 bluff
      #traitmodify[skBluff,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHalfOSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacFurAss" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftHalflSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacSecCha" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftHarbiReb"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skHeal,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHarroStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHealiSon"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fBrdSonRes" phase="***NOPARTIAL***"/>
    <bootstrap thing="fBrdSkiVer" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftHeartBla"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc)"/>
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fSmgSwordb" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftHeartExp"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerClass.clsWarlord &amp; PowerType.Encounter"/>
    </thing>

  <thing
    id="ftHeatAda"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 5
      elseif (#level[] <= 20) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsFire,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHeavyArm"
    name=""
    compset="">
    <eval phase="Traits" priority="1000">
      perform hero.assign[Hero.NoArmorSpd]

      <before name="Armor effects final"/>
      </eval>
    </thing>

  <thing
    id="ftHvBlExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgHeavyBl"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftHellfArc"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      foreach pick in hero from Power where "DamageType.Fire"
        perform eachpick.field[pwDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftHellfBlo"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      foreach pick in hero from Power where "(DamageType.Fire | EffectType.Fear)"
        perform eachpick.field[pwDamBonus].modify[+,1,""]
        perform eachpick.field[pwAtkMod].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftHellsImp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      perform hero.assign[ImplemType.wgPolearm]
      ]]></eval>
    </thing>

  <thing
    id="ftHerbalis"
    name=""
    compset="">
    <bootstrap thing="rtBrewPot">
      <containerreq phase="Setup" priority="1000">
        <after name="Level final"/><![CDATA[
        val:Level.? >= 5
        ]]></containerreq>
      </bootstrap>
    </thing>

  <thing
    id="ftHeroFai"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skPercepti | thingid.skReligion | thingid.skStealth | thingid.skStreetwi)"/>
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pAveOatEnm"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itHolySym]
      ]]></eval>
    </thing>

  <thing
    id="ftHideArm"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="18000">
      <before name="Derived trtFinal"/>
      <after name="Calc attrBonus"/>
      <![CDATA[
      doneif (hero.haschild[ArmorBase,"Equipped.Equipped & ArmorType.arHideArm"] = 0)

      ~hide armor = +2 bonus to AC instead of dex or int
      var maxattr as number
      maxattr = maximum(#attrbasebonus[attrDex],#attrbasebonus[attrInt])
      if (maxattr < 2) then
        perform hero.child[defAC].field[trtBonus].modify[+,2 - maxattr,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftHighbDro"
    name=""
    compset="">
    <tag group="Hide" tag="Special" name="***DELETE***"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skArcana,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHolyDil"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftHolySym"
    name=""
    compset=""
    uniqueness="none">
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags to all implements of
      ~the appropriate type
      foreach pick in hero where "EquipIndex.? & ImplemType.itHolySym"
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftHumanHei"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill"/>
    <fieldval field="usrCandid2" value="component.Defense &amp; !thingid.defAC"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.field[trtRacial].modify[+,2,""]
      perform field[usrChosen2].chosen.field[trtRacial].modify[+,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHumanPer"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trSave,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHumanSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defFort,trtBonus,1,""]
      #traitmodify[defRef,trtBonus,1,""]
      #traitmodify[defWill,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHuntiStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftHybriTal"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.HybridTal"/>
    <eval index="1" phase="Initialize" priority="100">
      <before name="Hybrid talent activated"/><![CDATA[
      ~delete the disabled tag from our selected talent as early as possible
      ~so that it can do its stuff
      perform field[usrChosen1].chosen.assign[Helper.ChosenOpt]
      ]]></eval>
    </thing>

  <thing id="ftHyTlFree" name="Hybrid Talent (Free)" description="At 11th level, you gain a free Hybrid Talent feat." compset="Feat" uniqueness="unique">
    <fieldval field="usrCandid1" value="component.HybridTal"/>
    <usesource source="PHB3"/>
    <tag group="Tier" tag="Heroic"/>
    <tag group="Helper" tag="Bootstrap"/>
    <containerreq phase="Setup" priority="50">
      <after name="Level final"/><![CDATA[
      (val:Level.? >= 11) & Hero.Hybrid
      ]]></containerreq>
    <eval phase="Setup" priority="60">
      ~delete the disabled tag from our selected talent as early as possible
      ~so that it can do its stuff
      perform field[usrChosen1].chosen.assign[Helper.ChosenOpt]
      <before name="Hybrid talent activated"/>
      </eval>
    </thing>

  <thing
    id="ftIconPur"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist Fire Wis modifier + half level
      var bonus as number
      bonus = #attrbonus[attrWis]
      #traitmodify[rsFire,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftImmorWar"
    name=""
    compset="">
    <eval phase="Setup" priority="5"><![CDATA[
      ~if we're wielding a light blade or heavy blade, we get +1 (or +3
      ~if our off-hand is free) to the resistances from our racial trait. It's
      ~easiest just to duplicate that bonus here.
      var bonus as number
      bonus = 5 + round(hero.tagvalue[Level.?] / 2, 0, -1)

      var isblade as number
      var isoffempty as number
      isblade = 0
      isoffempty = 1
      foreach pick in hero from WeapMelee where "!Hide.Weapon"
        if (eachpick.tagis[WepGroup.wgHeavyBl] + eachpick.tagis[WepGroup.wgLightBl] <> 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            isblade = 1
            endif
          endif
        if (eachpick.tagis[Helper.EqpOff] + eachpick.tagis[Helper.EqpBoth] <> 0) then
          isoffempty = 0
          endif
        nexteach
      if (isblade <> 0) then
        if (isoffempty <> 0) then
          #traitmodify[rsNecrotic,rsTotal,bonus + 3,""]
          #traitmodify[rsRadiant,rsTotal,bonus + 3,""]
        else
          #traitmodify[rsNecrotic,rsTotal,bonus + 1,""]
          #traitmodify[rsRadiant,rsTotal,bonus + 1,""]
          endif
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftImperMaj"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.child[trInit].assign[LinkAttr.attrCha]
      ]]></eval>
    </thing>

  <thing
    id="ftImpleExp"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.ImplemType"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] <= 14) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] <= 24) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags to all implements of
      ~the appropriate type
      foreach pick in hero where "EquipIndex.? & ImplemType." & field[usrChosen1].chosen.idstring
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftImpleFoc"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.ImplemType"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags to all implements of
      ~the appropriate type
      foreach pick in hero where "EquipIndex.? & ImplemType." & field[usrChosen1].chosen.idstring
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.DamBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftImpleMas"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="fWizArcImp" phase="***NOPARTIAL***"></bootstrap>
    <bootstrap thing="fWizStaDef" phase="***NOPARTIAL***"></bootstrap>
    <bootstrap thing="fWizTomBin" phase="***NOPARTIAL***"></bootstrap>
    <bootstrap thing="fWizTomRea" phase="***NOPARTIAL***"></bootstrap>
    <bootstrap thing="fWizWanAcc" phase="***NOPARTIAL***"></bootstrap>
    <bootstrap thing="fWizOrbDec" phase="***NOPARTIAL***"></bootstrap>
    <bootstrap thing="fWizOrbImp" phase="***NOPARTIAL***"></bootstrap>
    </thing>

  <thing
    id="ftImproArm"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      var bonus as number
      if (hero.tagvalue[Level.?] <= 11) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] <= 21) then
        bonus = 2
      else
        bonus = 3
        endif

      ~bonus to AC if wearing armor no better than cloth, and no shield
      if (hero.haschild[ArmorBase,"Equipped.Equipped & (!ArmorType.arClothArm | Armory.Shield)"] = 0) then
        perform hero.child[defAC].field[trtClass].modify[+,bonus,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftImproDef"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      #traitmodify[defFort,trtFeat,bonus,""]
      #traitmodify[defRef,trtFeat,bonus,""]
      #traitmodify[defWill,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftImproImm"
    name=""
    compset="">
    <tag group="Hide" tag="Special" name="***DELETE***"/>
    </thing>

  <thing
    id="ftImproIni"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,4,""]
      ]]></eval>
    </thing>

  <thing
    id="ftImproMon"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1001">
      <after name="Monk Unarmed Strike Upgrade"/>
      <![CDATA[
      ~ignore if partial
      ~modify our unarmed attack
      perform hero.child[wpUnarmed].setfocus
      perform focus.delete[WepDamage.?]
      perform focus.assign[WepDamage.1d10]
      ]]></eval>
    </thing>

  <thing
    id="ftImproSta"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform hero.findchild[none,"Equipped.Equipped & ImplemType.itStaff"].setfocus
      doneif (state.isfocus = 0)
      #traitmodify[defFort,trtBonus,1,""]
      #traitmodify[defRef,trtBonus,1,""]
      #traitmodify[defWill,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftImproSmW"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval phase="Setup" priority="5"><![CDATA[
      ~if we're wielding a light blade or heavy blade, and cloth, leather or no
      ~armor, we get +1 to AC
      var isblade as number
      isblade = 0
      foreach pick in hero from WeapMelee where "!Hide.Weapon"
        if (eachpick.tagis[WepGroup.wgHeavyBl] + eachpick.tagis[WepGroup.wgLightBl] <> 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            isblade = 1
            endif
          endif
        nexteach
      doneif (isblade = 0)
      foreach pick in hero from ArmorBase where "Equipped.Equipped"
        doneif (eachpick.tagis[ArmorType.arLeathArm] + eachpick.tagis[ArmorType.arClothArm] = 0)
        nexteach
      #traitmodify[defAC,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftImproRea"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000">
      <after name="Level final"/>
      <![CDATA[
      ~build our tag expression for selecting a lower-level power we don't know
      var level as number
      level = hero.tagvalue[Level.?]
      var expr as string
      expr = "(PowerType.Daily | PowerType.Utility) & (val:ReqLevel.? <= " & level & ")"
      expr &= " & PowerClass.clsWizard"

      ~now specifically exclude all powers we know
      foreach pick in hero from Power where "(PowerType.Daily | PowerType.Utility) & PowerClass.clsWizard"
        expr &= " & !thingid." & eachpick.idstring
        nexteach

      field[usrCandid1].text = expr
      ]]></eval>
    </thing>

  <thing
    id="ftInfecWra"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftInitiFai"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pClrHeaWor">
      <autotag group="PowerOver" tag="Daily"/>
      <assignval field="spcMax" value="1"/>
      </bootstrap>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skReligion].assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itHolySym]
      ]]></eval>
    </thing>

  <thing
    id="ftInitiOld"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pDrdWilSha"></bootstrap>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <before name="opcExpr must be final"/>
      <![CDATA[
      perform hero.child[skNature].assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itTotem]
      perform hero.assign[ImplemType.itStaff]

      var title as string
      var expr as string
      title = "Bonus Power"
      expr = "PowerClass.clsDruid & PowerType.AtWill & EffectType.Beast"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.delete[PowerType.AtWill]
      perform focus.assign[PowerType.Encounter]

      ~ignore any errors about requiring other classes
      perform focus.assign[thing.skipprereq]
      ]]></eval>
    </thing>

  <thing
    id="ftInsigLea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftInspiLea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftIntimDra"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,4,""]
      ]]></eval>
    </thing>

  <thing
    id="ftInvigExp"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Martial &amp; PowerType.Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[EffectType.Invigorat]
      ]]></eval>
    </thing>

  <thing
    id="ftInvigHea"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftInvokBla"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      foreach pick in hero from Power where "PowerSrc.Divine & (DamageType.Fire | DamageType.Radiant)"
        perform eachpick.field[pwDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftIronHid"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist many 5/10/15
      var bonus as number
      if (#level[] <= 10) then
        bonus = 5
      elseif (#level[] <= 20) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsAcid,rsTotal,bonus,""]
      #traitmodify[rsCold,rsTotal,bonus,""]
      #traitmodify[rsFire,rsTotal,bonus,""]
      #traitmodify[rsLightn,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftIronsStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftIronWil"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      #traitmodify[defWill,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftJackAll"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="23000">
      <before name="Derived trtFinal"/>
      <after name="Calc sklTrained"/>
      <![CDATA[
      foreach pick in hero from Skill where "!Helper.Trained?"
        perform eachpick.field[trtFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftJaggeFor"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from Power where "DamageType.Force"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftKalidPai"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftKiFoc"
    name=""
    compset=""
    uniqueness="none">
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags to all implements of
      ~the appropriate type
      foreach pick in hero where "EquipIndex.? & ImplemType.itKiFocus"
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftKilleIns"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftKnighBea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDiplomac,trtFeat,2,""]
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftKrintHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftKulkoStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftLeafrSco"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftLeafStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftLearnSpe"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skNature | thingid.skReligion)"/>
    <bootstrap thing="fWizRitCas" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftLgBlExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgLightBl"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftLightRef"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      #traitmodify[defRef,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftLinguist"
    name=""
    compset=""
    uniqueness="none">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc resLeft"/>
      <![CDATA[
      #resmax[resLangExt] += 3
      ]]></eval>
    </thing>

  <thing
    id="ftLonghStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftLongJum"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftLowLiAda"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform hero.assign[Vision.Lowlight]
      ]]></eval>
    </thing>

  <thing
    id="ftLuckCha"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftManifRes"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~fire / storm / wind: increase resist value by 5
      if (hero.child[fRGeFiresl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[rsFire,rsExtra,5,""]
      elseif (hero.child[fRGeStorsl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[rsLightn,rsExtra,5,""]
      elseif (hero.child[fRGeWindsl].tagis[Helper.ChosenOpt] <> 0) then
        #traitmodify[rsCold,rsExtra,5,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftMartiAda"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Martial &amp; PowerType.Daily"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    </thing>

  <thing
    id="ftMartiAla"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftMartiFle"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Martial &amp; PowerType.Utility"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    </thing>

  <thing
    id="ftMartiRea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Martial &amp; PowerType.AtWill"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    </thing>

  <thing
    id="ftMartiVam"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftMartiVer"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Martial &amp; PowerType.Encounter"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    </thing>

  <thing
    id="ftMasteArm"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftMasteCom"
    name=""
    compset="">
    <bootstrap thing="rtComprLan"/>
    </thing>

  <thing
    id="ftMasteFir"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="5000">
      <before name="pwLinkUses final"/>
      <![CDATA[
      ~ignore if partial
      perform hero.childfound[pRacDarkfi].delete[PowerLink.?]
      perform hero.childfound[pRacCloDar].delete[PowerLink.?]
      ]]></eval>
    </thing>

  <thing
    id="ftMasteKni"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpKukri]
      perform hero.assign[WeaponProf.wpKatar]
      perform hero.assign[ImplemType.wpKukri]
      perform hero.assign[ImplemType.wpKatar]
      ]]></eval>
    </thing>

  <thing
    id="ftMasteSec"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.child[skArcana].assign[Helper.SklPwrTrnd]
      perform hero.child[skDungeone].assign[Helper.SklPwrTrnd]
      perform hero.child[skHistory].assign[Helper.SklPwrTrnd]
      perform hero.child[skNature].assign[Helper.SklPwrTrnd]
      perform hero.child[skReligion].assign[Helper.SklPwrTrnd]
      ]]></eval>
    </thing>

  <thing
    id="ftMendiSpi"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pShmHlSpir"/>
    </thing>

  <thing
    id="ftMidniSta"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftMidniStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftMinioDar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Darkvision]]]>
      </eval>
    </thing>

  <thing
    id="ftMinotWea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpBattleax]
      perform hero.assign[WeaponProf.wpHandaxe]
      perform hero.assign[WeaponProf.wpWarhamme]
      perform hero.assign[WeaponProf.wpThrowham]
      ]]></eval>
    </thing>

  <thing
    id="ftMonasAde"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAcrobati | thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skInsight | thingid.skPercepti | thingid.skReligion | thingid.skStealth | thingid.skThievery)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000"><![CDATA[
      var title as string
      var expr as string
      title = "Monk Power"
      expr = "PowerClass.clsMonk & PowerType.AtWill & ReqLevel.1"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.assign[PowerOver.Encounter]
      ]]>
      <before name="opcExpr must be final"/>
      </eval>
    </thing>

  <thing
    id="ftMonasDis"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAcrobati | thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skInsight | thingid.skPercepti | thingid.skReligion | thingid.skStealth | thingid.skThievery)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      ~implement types
      perform hero.assign[ImplemType.itKiFocus]
      perform hero.assign[ImplemType.wpClub]
      perform hero.assign[ImplemType.wpDagger]
      perform hero.assign[ImplemType.wpQuarters]
      perform hero.assign[ImplemType.wpShuriken]
      perform hero.assign[ImplemType.wpSling]
      perform hero.assign[ImplemType.wpSpear]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000"><![CDATA[
      var title as string
      var expr as string
      title = "Flurry of Blows Power"
      expr = "PowerClass.clsMonk & PowerType.Feature"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.assign[PowerOver.Encounter]
      ]]>
      <before name="opcExpr must be final"/>
      </eval>
    </thing>

  <thing
    id="ftMonasVam"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftMoonElf"
    name=""
    compset="">
    <pickreq thing="ftSunElf" ispreclude="yes"/>
    </thing>

  <thing
    id="ftMoradStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftMountStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftMulsSta"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trSurgeVal,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftMultiMas"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #resmax[resFeats] += 2
      ]]></eval>
    </thing>

  <thing
    id="ftNaturCun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNaturInt"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNetTra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpNet]
      ]]></eval>
    </thing>

  <thing
    id="ftNeratStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNewSar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 init
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNibenGlo"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skEnduranc,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNibenBri"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skBluff,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNinthStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftNightKil"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from Power where "EffectType.Fear"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftNightSig"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Lowlight]
      ]]></eval>
    </thing>

  <thing
    id="ftOgremStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftOrbExp"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] < 11) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] < 21) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags
      foreach pick in hero where "EquipIndex.? & ImplemType.itOrb"
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftPactIni"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skBluff | thingid.skHistory | thingid.skInsight | thingid.skIntimida | thingid.skReligion | thingid.skStreetwi | thingid.skThievery)"/>
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <before name="opcExpr must be final"/>
      <![CDATA[
      ~ignore if partial
      perform hero.assign[ImplemType.itRod]
      perform hero.assign[ImplemType.itStaff]

      var title as string
      var expr as string
      title = "Warlock Pact"
      expr = "BuildOpt.fWlkEldPac & !thingid.fWlkEldPac"
      call MultChoice
      doneif (state.isfocus = 0)

      ~turn all the pact at-will powers into encounter powers
      foreach pick in hero from Power where "PowerClass.clsWarlock"
        if (eachpick.tagis[thing.user_added] = 0) then
          perform eachpick.delete[PowerType.AtWill]
          perform eachpick.assign[PowerType.Encounter]
          perform eachpick.assign[thing.skipprereq]
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftParagDef"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defFort,trtFeat,1,""]
      #traitmodify[defRef,trtFeat,1,""]
      #traitmodify[defWill,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPartiStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skHistory,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPatroGui"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill"/>
    <fieldval field="usrCandid2" value="component.Skill"/>
    </thing>

  <thing
    id="ftPersiCha"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftPickExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgPick"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftPlaguBre"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      doneif (activated = 0)

      perform hero.child[pRacDraBre].assign[DamageType.Necrotic]
      ]]></eval>
    </thing>

  <thing
    id="ftPlatiRev"
    name=""
    compset="">
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skInsight].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftPoisoAda"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] < 11) then
        bonus = 5
      elseif (#level[] < 21) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsPoison,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPoisoner"
    name=""
    compset="">
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skThievery].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftPoleaExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgPolearm"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftPowerArc"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skArcana,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerBre"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Attribute"/>
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.setfocus
      doneif (state.isfocus = 0)
      perform focus.pulltags[Attack.?]
      perform focus.pulltags[DamageAttr.?]
      perform hero.childfound[pRacDraBre].setfocus
      doneif (state.isfocus = 0)
      perform focus.delete[Attack.?]
      perform focus.delete[DamageAttr.?]
      perform focus.pushtags[Attack.?]
      perform focus.pushtags[DamageAttr.?]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerCha"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skThievery,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerCiv"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDiplomac,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerCre"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerDar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerDea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerDes"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerEar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerFat"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerFre"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerHop"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDiplomac,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerJus"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerKno"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skHistory,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerLif"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skHeal,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerLov"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDiplomac,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerLuc"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerMad"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skBluff,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerPoi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skBluff,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerPro"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skHeal,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerSki"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="23000">
      <before name="Derived trtFinal"/>
      <after name="Calc sklTrained"/>
      <![CDATA[
      foreach pick in hero from Skill where "Helper.Trained?"
        perform eachpick.field[trtFeat].modify[+,1,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftPowerStr"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPwrflStr"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerClass.clsFighter &amp; PowerType.Encounter &amp; ReqLevel.?"/>
    <bootstrap thing="pFtrPowStr">
      <autotag group="User" tag="ClassOK"/>
      </bootstrap>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.Disable]
      ]]></eval>
    </thing>

  <thing
    id="ftPwrStr"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skBluff,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerMoo"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerSea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerSto"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerSun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerWil"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerTor"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerTri"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skThievery,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerTyr"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerUnd"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skReligion,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerVen"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerWar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skHistory,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPowerWin"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPractPro"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~bonus practices
      var bonus as number
      if (#level[] < 5) then
        bonus = 2
      elseif (#level[] < 11) then
        bonus = 3
      elseif (#level[] < 15) then
        bonus = 4
      elseif (#level[] < 21) then
        bonus = 5
      elseif (#level[] < 25) then
        bonus = 6
      else
        bonus = 7
        endif
      hero.child[resRituals].field[resMax].value += bonus
      ]]></eval>
    </thing>

  <thing
    id="ftPractRel"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerClass.clsFighter &amp; PowerType.Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[EffectType.Reliable]
      ]]></eval>
    </thing>

  <thing
    id="ftPractStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]

      ~we get one bonus martial practice
      hero.child[resRituals].field[resMax].value += 1
      ]]></eval>
    </thing>

  <thing
    id="ftPreciFan"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Power attack final"/>
      <![CDATA[
      perform hero.child[pShmSpiFan].field[pwAtkMod].modify[+,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPrimaEye"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000">
      <after name="Calc attrBnBase"/><![CDATA[
      if (#attrbasebonus[attrDex] > #attrbasebonus[attrInt]) then
        perform hero.child[pwBasicRng].assign[DamageAttr.attrDex]
      else
        perform hero.child[pwBasicRng].assign[DamageAttr.attrStr]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftPrimaSha"
    name=""
    compset="">
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skNature].assign[Helper.TrainedAut]

      var title as string
      var expr as string
      title = "Seeker Power"
      expr = "PowerClass.clsSeeker & PowerType.AtWill"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.assign[PowerOver.Encounter]
      ]]></eval>
    </thing>

  <thing
    id="ftPrimaVam"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftPsionCom"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="10000"><![CDATA[
      ~decrease our number of class at-will powers by 1
      #resmax[resAtWill] -= 1

      ~increase our number of multiclass at-will powers by 1
      #resmax[resMCAtW] += 1
      ]]></eval>
    </thing>

  <thing
    id="ftPsionCon"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="10000"><![CDATA[
      ~decrease our number of class at-will powers by 1
      #resmax[resAtWill] -= 1

      ~increase our number of multiclass encounter powers by 1
      #resmax[resMCEnc] += 1

      ~we lose PP too
      var pp as number
      if (#level[] <= 10) then
        pp = 2
      elseif (#level[] <= 20) then
        pp = 4
      else
        pp = 6
        endif
      #trkmax[trkPower] -= pp
      ]]></eval>
    </thing>

  <thing
    id="ftPsionDab"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="10000"><![CDATA[
      ~decrease our number of class encounter powers by 1
      #resmax[resEncount] -= 1

      ~increase our number of multiclass at-will powers by 1
      #resmax[resMCAtW] += 1

      ~we gain PP too
      var pp as number
      if (#level[] <= 10) then
        pp = 2
      elseif (#level[] <= 20) then
        pp = 4
      else
        pp = 6
        endif
      #trkmax[trkPower] += pp
      ]]></eval>
    <exprreq message="Requires at least one total class encounter power"><![CDATA[
      #resmax[resEncount] > 0
      ]]></exprreq>
    </thing>

  <thing
    id="ftPsionIni"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPsionSki"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.field[trtFeat].modify[+,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPsionTou"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 3
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 6
      else
        bonus = 9
        endif
      #traitmodify[trHealth,trtBonus,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftPsionVam"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftPsychFoc"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from Power where "DamageType.Psychic"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftPupilAll"
    name=""
    compset="">
    <bootstrap thing="rtEnchaMag"/>
    <bootstrap thing="rtMakeWho"/>
    </thing>

  <thing
    id="ftPureMin"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[rsPsychic,rsTotal,10,""]
      #traitmodify[defWill,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftQuickDra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftQuickRea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.child[trInit].assign[LinkAttr.attrCha]
      ]]></eval>
    </thing>

  <thing
    id="ftQuickSpe"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Arcane &amp; PowerType.AtWill &amp; ActionType.Standard"/>
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftQuickSte"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSpeed,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftQuoriDes"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftQuoriShi"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~resist Psychic 5 + half level
      var bonus as number
      bonus = 5 + #halflevel[]
      #traitmodify[rsPsychic,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRaamsMaw"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRadiaBre"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      perform hero.child[pRacDraBre].assign[DamageType.Radiant]
      ]]></eval>
    </thing>

  <thing
    id="ftRaginSto"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from Power where "(DamageType.Thunder | DamageType.Lightning)"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftRampaFur"
    name=""
    compset="">
    <bootstrap thing="fBbnRampag" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftRattlExp"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Martial &amp; PowerType.Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[EffectType.Rattling]
      ]]></eval>
    </thing>

  <thing
    id="ftReapeRes"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 5
      elseif (#level[] <= 20) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsNecrotic,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftReapiRen"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftReaviStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRedStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftReligDab"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Divine &amp; PowerType.AtWill"/>
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftRememKna"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      perform field[usrChosen1].chosen.field[trtFeat].modify[+,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRememMot"
    name=""
    compset="">
    <bootstrap thing="lanSuperna"/>
    </thing>

  <thing
    id="ftRememWiz"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="2">
      <before name="Daily powers multiplied"/>
      <![CDATA[
      hero.childfound[clsWizard].field[clsDailyMl].value += 1
      hero.childfound[clsWizard].field[clsUtilMl].value += 1
      ]]></eval>
    </thing>

  <thing
    id="ftRendiStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRenewby"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftResilDea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 20) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsPoison,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftResilFoc"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trSave,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftResouLea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftRodExp"
    name=""
    compset=""
    uniqueness="none">
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] < 11) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] < 21) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags to all implements of
      ~the appropriate type
      var isfound as number
      foreach pick in hero where "EquipIndex.? & ImplemType.Rod"
        var i as number
        isfound = 1
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach

      ~if we found an equipped rod, add our shield bonus
      if (isfound <> 0) then
        #traitmodify[defAC,trtShield,1,""]
        #traitmodify[defRef,trtShield,1,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftRogueWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "(thingid.wpDagger | thingid.wpShuriken)"
        if (eachpick.tagis[WepProp.HighCrit] = 0) then
          perform eachpick.assign[WepProp.HighCrit]
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftRoofRun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseKin"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skHeal,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseFal"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseLun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseRep"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseRun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseShi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRoseSte"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRuneElo"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <after name="Feat tag final"/>
      <![CDATA[
      var bonus as number
      bonus = hero.tagcount[ftDescript.Rune]
      #traitmodify[skBluff,trtFeat,bonus,""]
      #traitmodify[skDiplomac,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRuneVen"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftRuneZea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <after name="Feat tag final"/>
      <![CDATA[
      var bonus as number
      bonus = hero.tagcount[ftDescript.Rune]
      #traitmodify[skAthletic,trtFeat,bonus,""]
      #traitmodify[skEnduranc,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftRuthlEff"
    name=""
    compset="">
    <bootstrap thing="fRogRutRuf" phase="***NOPARTIAL***">
      <autotag group="Helper" tag="ChosenOpt"/>
      </bootstrap>
    <eval index="1" phase="Setup" priority="100" name="Build option activated">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skStealth].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftRuthlHun"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "(thingid.wpHandCro)"
        perform eachpick.delete[WepDamage.?]
        perform eachpick.assign[WepDamage.1d8]
        if (eachpick.tagis[WepProp.HighCrit] = 0) then
          perform eachpick.assign[WepProp.HighCrit]
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftScionGod"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defFort,trtFeat,1,""]
      #traitmodify[defWill,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftScionOna"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="100" name="Build option activated">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skStreetwi].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftScrappy"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      var bonus as number
      if (#level[] < 11) then
        bonus = 1
      elseif (#level[] < 21) then
        bonus = 2
      else
        bonus = 3
        endif

      ~check if we're wielding a versatile weapon in both hands
      foreach pick in hero from WeapMelee where "Equipped.Equipped & WepProp.Versatile & Helper.EqpBoth"
        perform eachpick.field[wpDamage].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSeasoVet"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSeconImp"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="(component.BuildOpt) &amp; (BuildOpt.fWizArcImp)"/>
    <eval index="1" phase="Setup" priority="100" name="Build option activated"><![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.ChosenOpt]
      ]]></eval>
    </thing>

  <thing
    id="ftSeconSki"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Armor effects final"/>
      <before name="Power attack final"/>
      <![CDATA[
      var isbonus as number
      isbonus = 0
      foreach pick in hero from Armor where "ArmorType.arHideArm"
        if (isbonus = 0) then
          if (eachpick.tagis[Equipped.Equipped] <> 0) then
            #traitmodify[defAC,trtFeat,2,""]
            foreach pick in hero from Power where "PowerSrc.Primal & EffectType.Fear"
              perform eachpick.field[pwAtkMod].modify[+,1,""]
              nexteach
            isbonus = 1
            endif
          endif
        if (eachpick.field[arCheck].value < 0) then
          eachpick.field[arCheck].value += 1
          endif
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSecreEnd"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftSecreEsc"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftSecreRea"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftSentiIni"
    name=""
    compset="">
    <bootstrap thing="pClrHeaWor"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skNature].assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itStaff]
      perform hero.assign[ImplemType.itTotem]

      perform hero.child[pClrHeaWor].setfocus
      perform focus.delete[PowerType.Encounter]
      perform focus.delete[PowerUse.Encounter]
      perform focus.assign[PowerUse.Daily]
      focus.field[spcMax].value = 1
      ]]></eval>
    </thing>

  <thing
    id="ftShadaSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacShaJau" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftShadeHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      perform hero.assign[Vision.Darkvision]
      ]]></eval>
    </thing>

  <thing
    id="ftShadoIni"
    name=""
    compset="">
    <bootstrap thing="pAsnAssShr">
      <autotag group="PowerUse" tag="Encounter"/>
      </bootstrap>
    <eval index="1" phase="Setup" priority="100">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skStealth].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftShareSpe"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSpeed,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftShielFin"
    name=""
    compset="">
    <eval phase="Traits" priority="1000">
      perform hero.assign[Hero.NoShldChk]

      <before name="Armor effects final"/>
      </eval>
    </thing>

  <thing
    id="ftShielPro"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apShieldHv]
      ]]></eval>
    </thing>

  <thing
    id="ftShielLig"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="5000">
      <before name="Armor type proficiencies"/>
      <![CDATA[
      perform hero.assign[ArmorProf.apShieldLg]
      ]]></eval>
    </thing>

  <thing
    id="ftShielMas"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="20000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform hero.findchild[Shield,"Equipped.Equipped"].setfocus
      doneif (state.isfocus = 0)
      #traitmodify[defFort,trtShield,focus.field[arAC].value,""]
      ]]></eval>
    </thing>

  <thing
    id="ftShielSpe"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="20000">
      <before name="Derived trtFinal"/>
      <after name="Armor proficiencies final"/>
      <![CDATA[
      perform hero.findchild[Shield,"Equipped.Equipped & Helper.Proficient"].setfocus
      doneif (state.isfocus = 0)
      #traitmodify[defAC,trtFeat,1,""]
      #traitmodify[defRef,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftShiftSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacLonShi" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftSilenSha"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSilenStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSilveGlo"
    name=""
    compset="">
    <eval index="1" phase="Final" priority="9250">
      <before name="Power attack final"/>
      <after name="Hero damage tags final"/><![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif

      foreach pick in hero from Power where "DamageType.Cold | DamageType.Radiant"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSkillFoc"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill &amp; Helper.Trained?"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.field[trtFeat].modify[+,3,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSkillTra"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Skill"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftSkinsSla"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <after name="mghBonus set"/>
      <![CDATA[
      perform hero.findchild[ArmorBase,"ArmorType.arHideArm & Equipped.Equipped"].setfocus
      doneif (state.isfocus = 0)
      var bonus as number
      bonus = 1
      if (focus.isgizmo <> 0) then
        bonus += focus.gizmo.child[MagicHelp].field[mghBonus].value
        endif
      #traitmodify[skIntimida,trtBonus,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSkirmLea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftSlingExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgSling"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSmallWar"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~check if we're wielding a versatile weapon in both hands - if not, do
      ~nothing
      doneif (hero.haschild[WeapMelee,"WepProp.Versatile & Helper.EqpBoth"] = 0)

      ~+2 to reflex and AC
      #traitmodify[defAC,trtBonus,2,""]
      #traitmodify[defRef,trtBonus,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSnakeBlo"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[rsPoison,rsTotal,5,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSneakSha"
    name=""
    compset="">
    <bootstrap thing="fRogSneAtt" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skThievery].assign[Helper.TrainedAut]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000">
      <![CDATA[
      ~ignore if partial
      perform hero.child[fRogSneAtt].setfocus
      perform focus.delete[PowerType.Feature]
      perform focus.assign[PowerUse.Encounter]
      ]]></eval>
    </thing>

  <thing
    id="ftSneakGno"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftSnowdCou"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Streetwise
      #traitmodify[skStreetwi,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSoldiVir"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skInsight | thingid.skIntimida | thingid.skReligion)"/>
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pPalVirTou"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      perform hero.assign[ImplemType.itHolySym]
      ]]></eval>
    </thing>

  <thing
    id="ftSorcePow"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000">
      <after name="Calc attrBonus"/><![CDATA[
      var damage as number
      if (hero.tagvalue[Level.?] <= 20) then
        damage = 0
      else
        damage = 2
        endif
      damage += maximum(hero.child[attrDex].field[attrBonus].value, hero.child[attrStr].field[attrBonus].value)

      ~+str/dex to arcane power damage (+2 at 21)
      foreach pick in hero from Power where "PowerSrc.Arcane"
        perform eachpick.field[pwDamBonus].modify[+,damage,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSorceRes"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.findchild[Power,"PowerType.Daily & PowerClass.clsSorcere & !Helper.Activated & !Hide.Special"].setfocus
      if (state.isfocus = 0) then
        foreach pick in hero from Power where "PowerType.AtWill & PowerClass.clsSorcere"
          perform eachpick.field[pwAtkMod].modify[+,1,""]
          nexteach
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftSoulSor"
    name=""
    compset=""
    uniqueness="none">
    <arrayval field="usrArray" index="0" value="Acid"/>
    <arrayval field="usrArray" index="1" value="Cold"/>
    <arrayval field="usrArray" index="2" value="Fire"/>
    <arrayval field="usrArray" index="3" value="Force"/>
    <arrayval field="usrArray" index="4" value="Lightning"/>
    <arrayval field="usrArray" index="5" value="Necrotic"/>
    <arrayval field="usrArray" index="6" value="Poison"/>
    <arrayval field="usrArray" index="7" value="Psychic"/>
    <arrayval field="usrArray" index="8" value="Radiant"/>
    <arrayval field="usrArray" index="9" value="Thunder"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var resid as string
      if (compare(field[usrSelect].text, "Lightning") <> 0) then
        resid = "thingid.rs" & field[usrSelect].text
      else
        resid = "thingid.rsLightn"
        endif
      perform hero.findchild[Resistance,resid].field[rsTotal].modify[+,5,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSoldiFai"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skInsight | thingid.skIntimida | thingid.skReligion)"/>
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pPalDivCha"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000">
      <![CDATA[
      perform hero.assign[ImplemType.itHolySym]

      perform hero.child[pPalDivCha].setfocus
      perform focus.delete[PowerType.AtWill]
      perform focus.delete[PowerUse.AtWill]
      perform focus.assign[PowerUse.Encounter]
      ]]></eval>
    </thing>

  <thing
    id="ftSpareInf"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftSpearExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgSpear"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSpellSub"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      bonus = 2

      if (hero.haschild[Feat,"thingid.ftStudePla"] <> 0) then
        bonus = 4
        endif

      #traitmodify[skDiplomac,trtFeat,bonus,""]
      #traitmodify[skBluff,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSpideSwi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSpeed,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSpikeTra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpSpikecha]
      foreach pick in hero from WeaponBase where "thingid.wpSpikecha"
        perform eachpick.assign[WepProp.OffHand]
        perform eachpick.assign[WepDamSec.2d4]
        perform eachpick.assign[WepGroup.wgLightBl]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftSpiriLal"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSpiriTal"
    name=""
    compset="">
    <bootstrap thing="pShmCalSpi"/>
    <bootstrap thing="pShmSpewit">
      <autotag group="PowerOver" tag="Daily"/>
      </bootstrap>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skNature].assign[Helper.TrainedAut]

      ~call spirit companion is a standard action
      perform hero.child[pShmCalSpi].delete[ActionType.?]
      perform hero.child[pShmCalSpi].assign[ActionType.Standard]

      ~we gain a shaman feature power as an encounter power
      var title as string
      var expr as string
      title = "Companion Spirit"
      expr = "PowerClass.clsShaman & PowerType.Feature & PowerUse.AtWill & !thingid.pShmCalSpi"
      call MultChoice
      doneif (state.isfocus = 0)

      ~change the power to an encounter power
      perform focus.assign[PowerOver.Encounter]
      ]]></eval>
    </thing>

  <thing
    id="ftSquirRig"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skInsight | thingid.skIntimida | thingid.skReligion)"/>
    <bootstrap thing="pFtrDefAur"/>
    <bootstrap thing="pPalRigRad"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itHolySym]

      perform hero.child[pPalRigRad].setfocus
      perform focus.delete[PowerType.AtWill]
      perform focus.delete[PowerUse.AtWill]
      perform focus.assign[PowerUse.Encounter]
      focus.field[spcMax].value = 1
      ]]></eval>
    </thing>

  <thing
    id="ftStaffExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1
      elseif (#level[] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif
      foreach pick in hero from WeaponBase where "WepGroup.wgStaff"
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftStaffFig"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "thingid.wpQuarters"
        perform eachpick.assign[WepDamSec.1d8]
        perform eachpick.assign[WepProp.Defensive]
        perform eachpick.assign[WepProp.OffHand]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftStalwSen"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSteelStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Athletics
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSteelVet"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Athletics
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftStoneCun"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skDungeone,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftStoutShi"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="20000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform hero.findchild[Shield,"Equipped.Equipped"].setfocus
      doneif (state.isfocus = 0)
      #traitmodify[defFort,trtShield,focus.field[arAC].value,""]
      ]]></eval>
    </thing>

  <thing
    id="ftStoutSta"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "thingid.wpQuarters"
        perform eachpick.assign[WepProp.Small]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftStreeEye"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Streetwise
      #traitmodify[skStreetwi,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftStrenBon"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftStronTac"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000">
      <before name="Derived trtFinal"/>
      <after name="Calc attrBonus"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]

      ~ Modify skills
      var temp as number
      temp = #attrbonus[attrStr] - #attrbonus[attrCha]
      if (temp > 0) then
        #traitmodify[skIntimida,trtBonus,temp,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftStudeArt"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    <bootstrap thing="pArtHeaInf"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skArcana].assign[Helper.TrainedAut]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000">
      <![CDATA[
      perform hero.child[pArtHeaInf].setfocus
      perform focus.delete[PowerType.Encounter]
      perform focus.delete[PowerUse.Encounter]
      perform focus.assign[PowerUse.Daily]
      focus.field[spcMax].value = 1
      ]]></eval>
    <eval index="3" phase="Final" priority="1000">
      <![CDATA[
      perform hero.child[pArtHeaInf].setfocus
      focus.field[spcMax].value = 1
      focus.field[pwLinkUses].value = 1
      ]]></eval>
    </thing>

  <thing
    id="ftStudeBat"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <bootstrap thing="pWrlInsWor"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    <eval index="2" phase="Initialize" priority="1000">
      <![CDATA[
      perform hero.child[pWrlInsWor].setfocus
      perform focus.delete[PowerType.Encounter]
      perform focus.delete[PowerUse.Encounter]
      perform focus.assign[PowerUse.Daily]
      ]]></eval>
    </thing>

  <thing
    id="ftStudeDiv"
    name=""
    compset="">
    <bootstrap thing="pRnpRunMen">
      <autotag group="PowerOver" tag="Daily"/>
      <assignval field="spcMax" value="1"/>
      </bootstrap>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skReligion].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftStudeMal"
    name=""
    compset="">
    <bootstrap thing="pWlkWarCur" phase="***NOPARTIAL***"/>
    <eval index="1" phase="Initialize" priority="1000">
      <![CDATA[
      ~ignore if partial
      perform hero.child[pWlkWarCur].setfocus
      perform focus.delete[PowerUse.AtWill]
      perform focus.assign[PowerUse.Encounter]
      ]]></eval>
    </thing>

  <thing
    id="ftStudeSMg"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Setup" priority="2">
      <before name="Daily powers multiplied"/>
      <![CDATA[
      hero.childfound[clsSwordma].field[clsDailyMl].value = 2
      ]]></eval>
    </thing>

  <thing
    id="ftStudeAth"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftStudePla"
    name=""
    compset="">
    <arrayval field="usrArray" index="0" value="Sight of the Unseen"/>
    <arrayval field="usrArray" index="1" value="Flamespeed"/>
    <arrayval field="usrArray" index="2" value="Larger than Life"/>
    <tag group="Multiclass" tag="clsSplscar" name="Spellscarred"/>
    <tag group="Multiclass" tag="WepMastery" name="***DELETE***"/>
    </thing>

  <thing
    id="ftStudeSwo"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skStreetwi)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftSuddeCal"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftSunElf"
    name=""
    compset="">
    <pickreq thing="ftMoonElf" ispreclude="yes"/>
    </thing>

  <thing
    id="ftSunspHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSuperFor"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      var resist as number
      if (#level[] <= 10) then
        bonus = 2
        resist = 3
      elseif (#level[] <= 20) then
        bonus = 3
        resist = 6
      else
        bonus = 4
        resist = 9
        endif
      #traitmodify[defFort,trtFeat,bonus,""]
      #traitmodify[rsOngoing,rsTotal,resist,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSuperImp"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="(component.Equipment | component.WeaponBase) &amp; Equipment.SuperImpl"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="50" name="Superior implement training">
      <before name="Magic Weapon Copy"/>
      <![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      perform field[usrChosen1].chosen.forward[SuperImpl.?]
      perform field[usrChosen1].chosen.forward[WeaponProf.?]
      ]]></eval>
    </thing>

  <thing
    id="ftSuperIni"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,8,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSuperRef"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      #traitmodify[defRef,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSuperWil"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      #traitmodify[defWill,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSureCli"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAthletic,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSwiftJag"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSwiftRec"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 3
      elseif (#level[] <= 20) then
        bonus = 4
      else
        bonus = 5
        endif
      #traitmodify[trSurgeVal,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSwiftRid"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[trSpeed,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftSymboSon"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqMil.wgAxe]
      perform hero.assign[WpGrpRqMil.wgHammer]
      perform hero.assign[WpGrpRqMil.wgPick]
      foreach pick in hero from WeaponBase where "(WepGroup.wgAxe | WepGroup.wgHammer | WepGroup.wgPick) & Equipped.Equipped"
        perform eachpick.forward[ImplemType.?]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftTactiLea"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skDiplomac | thingid.skEnduranc | thingid.skHeal | thingid.skHistory | thingid.skIntimida)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftTalenWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpTalenBoo]
      perform hero.assign[WeaponProf.wpTalenSha]
      perform hero.assign[WeaponProf.wpTalenTan]
      foreach pick in hero from WeaponBase where "(thingid.wpTalenBoo | thingid.wpTalenSha | thingid.wpTalenTan)"
        perform eachpick.field[wpDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftTempeMag"
    name=""
    compset="">
    <eval index="1" phase="Final" priority="9250">
      <before name="Power attack final"/>
      <after name="Hero damage tags final"/><![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 1 + hero.tagis[Hero.Bloodied] * 1
      elseif (#level[] <= 20) then
        bonus = 2 + hero.tagis[Hero.Bloodied] * 2
      else
        bonus = 3 + hero.tagis[Hero.Bloodied] * 3
        endif

      foreach pick in hero from Power where "PowerSrc.Arcane & (DamageType.Lightning | DamageType.Thunder)"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftTerriAsp"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftTieflSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacInfWra" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftThiefBac"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerClass.clsRogue &amp; PowerType.Encounter &amp; ReqLevel.?"/>
    <bootstrap thing="pRogBackst">
      <autotag group="User" tag="ClassOK"/>
      </bootstrap>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.Disable]
      ]]></eval>
    </thing>

  <thing
    id="ftThougWar"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftThreeFor"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defFort,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftThreeRef"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defRef,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftThreeWil"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[defWill,trtFeat,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftThundBre"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      perform hero.childfound[pRacDraBre].assign[DamageType.Thunder]
      perform hero.childfound[pRacDraBre].assign[DamageType.Lightning]
      ]]></eval>
    </thing>

  <thing
    id="ftToughnes"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 5
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[trHealth,trtBonus,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftTraveIns"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      var bonus as number
      foreach pick in hero from Language
        bonus += 1
        nexteach
      #traitmodify[skInsight,trtFeat,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftTrustSpe"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerSrc.Arcane &amp; PowerType.Encounter"/>
    </thing>

  <thing
    id="ftTuratWea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 2
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif

      perform hero.assign[WeaponProf.wpKhopesh]
      perform hero.assign[WeaponProf.wpScourge]
      perform hero.assign[WeaponProf.wpSickle]
      perform hero.assign[WeaponProf.wpScythe]
      perform hero.assign[WeaponProf.wpScimitar]
      perform hero.assign[WeaponProf.wpFalchion]
      foreach pick in hero from WeaponBase where "thingid.wpKhopesh | thingid.wpScourge | thingid.wpSickle | thingid.wpScythe | thingid.wpScimitar | thingid.wpFalchion"
        perform eachpick.field[wpDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftTwiliAde"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform hero.child[skStealth].assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftTwiliTra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.assign[Vision.Lowlight]]]>
      </eval>
    </thing>

  <thing
    id="ftTwoBlWar"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAcrobati | thingid.skAthletic | thingid.skDungeone | thingid.skEnduranc | thingid.skHeal | thingid.skNature | thingid.skPercepti | thingid.skStealth)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      ~we can use one-handed weapons in our off-hand
      perform hero.assign[Hero.OneHandOff]
      ]]></eval>
    </thing>

  <thing
    id="ftTwoFiSho"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      foreach pick in hero from WeaponBase where "(thingid.wpHandCro)"
        perform eachpick.assign[WepProp.OffHand]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftTwoWeDef"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~check if we're wielding 2 weapons - if not, do nothing
      var mainhand as number
      var offhand as number
      foreach pick in hero from WeapMelee
        if (eachpick.tagis[Helper.EqpMain] <> 0) then
          mainhand = 1
          endif
        if (eachpick.tagis[Helper.EqpOff] <> 0) then
          offhand = 1
          endif
        nexteach
      doneif (mainhand + offhand <> 2)

      #traitmodify[defAC,trtShield,1,""]
      #traitmodify[defRef,trtShield,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftTwoWeFig"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~check if we're wielding 2 weapons - if not, do nothing
      var mainhand as number
      var offhand as number
      foreach pick in hero from WeapMelee
        if (eachpick.tagis[Helper.EqpMain] <> 0) then
          perform eachpick.setfocus
          mainhand = 1
          endif
        if (eachpick.tagis[Helper.EqpOff] <> 0) then
          offhand = 1
          endif
        nexteach
      doneif (mainhand + offhand <> 2)

      perform focus.field[wpDamage].modify[+,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftTyriaBur"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStreetwi,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftTyriaVic"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skHeal,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftUnarmAgi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000"><![CDATA[
      ~bonus to defenses if using cloth or no armor
      if (hero.haschild[ArmorBase,"Equipped.Equipped & ArmorType.arClothArm"] + !hero.haschild[ArmorBase,"Equipped.Equipped"] <> 0) then
        #traitmodify[defAC,trtFeat,2,""]
        endif
      ]]></eval>
    </thing>

  <thing
    id="ftUnderCli"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftUnderVig"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skInsight,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftUnnatSta"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc trtFinal"/>
      <![CDATA[
      #traitmodify[trSurges,trtBonus,1,""]
      ]]></eval>
    </thing>

  <thing
    id="ftUrikiSta"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skStealth,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftValenStu"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftValenRid"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WpGrpRqSim.wgSpear]
      perform hero.assign[WpGrpRqMil.wgSpear]
      ]]></eval>
    </thing>

  <thing
    id="ftValenWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif

      perform hero.assign[WeaponProf.wpScimitar]
      perform hero.assign[WeaponProf.wpDoublSci]
      perform hero.assign[WeaponProf.wpFalchion]
      foreach pick in hero from WeaponBase where "(thingid.ftValenWea | thingid.wpDoublSci | thingid.wpFalchion)"
        perform eachpick.field[wpDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftValenWar"
    name=""
    compset="">
    <eval phase="Setup" priority="105"><![CDATA[
      doneif (activated = 0)

      ~if we're not wielding a falchion or double scimitar, no effect
      doneif (hero.haschild[WeapMelee,"Equipped.Equipped & (thingid.wpFalchion | thingid.wpDoublSci)"] = 0)

      ~if we meet the requirements, +1 to AC
      doneif (hero.haschild[WeapMelee,"!Hide.Weapon & (WepGroup.wgHeavyBl | WepGroup.wgLightBl) & Equipped.Equipped"] = 0)
      #traitmodify[defAC,trtBonus,1,""]
      ]]>
      <after name="Disable class feature"/>
      </eval>
    </thing>

  <thing
    id="ftVelveBla"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftVenomHan"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftVenomKil"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] <= 10) then
        bonus = 2
      elseif (#level[] <= 20) then
        bonus = 3
      else
        bonus = 4
        endif
      foreach pick in hero from Power where "DamageType.Poison"
        perform eachpick.field[pwDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftVenomHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[rsPoison,rsTotal,5,""]
      ]]></eval>
    </thing>

  <thing
    id="ftVersaDue"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      foreach thing in WeaponBase where "!Equipment.TwoHand & WepCat.wcMilitary & WepGroup.wgHeavyBl"
        perform hero.assignstr["WeaponProf." & eachthing.idstring]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftVersaExp"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.WepGroup"/>
    <fieldval field="usrCandid2" value="component.ImplemType"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <tag group="ChooseSrc2" tag="Thing"/>
    <eval index="1" phase="Traits" priority="20000">
      <after name="Weapon proficiencies final"/><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our damage bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] < 15) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] < 25) then
        bonus = 2
      else
        bonus = 3
        endif

      ~work out our tag expression for increasing the attack bonus of weapons
      var expr as string
      expr = field[usrChosen1].chosen.tagids[WepGroup.?, " | "]
      foreach pick in hero from WeaponBase where expr
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach

      ~add an appropriate number of 'attack bonus' tags to all implements of
      ~the appropriate type
      expr = field[usrChosen2].chosen.tagids[ImplemType.?, " | "]
      foreach pick in hero where expr
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftVersaMas"
    name=""
    compset="">
    <eval phase="Setup" priority="350"><![CDATA[
      ~try and find the power that was added as the Dilettante power, and
      ~replace the override
      perform hero.findchild[Power,"OptChoose.RaceCh1st & !thingid.RaceCh1st"].setfocus
      doneif (state.isfocus = 0)
      perform focus.delete[PowerOver.Encounter]
      ]]>
      <after name="Dilettante power chosen"/>
      </eval>
    </thing>

  <thing
    id="ftVersaRes"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[rsCold,rsTotal,5,""]
      #traitmodify[rsFire,rsTotal,5,""]
      #traitmodify[rsThunder,rsTotal,5,""]
      ]]></eval>
    </thing>

  <thing
    id="ftVestiMas"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerClass.clsWarlock &amp; PowerType.Daily"/>
    </thing>

  <thing
    id="ftVistaFor"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftVistaGua"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]
      ]]></eval>
    </thing>

  <thing
    id="ftVistaHea"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]
      ]]></eval>
    </thing>

  <thing
    id="ftVistaJon"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]
      ]]></eval>
    </thing>

  <thing
    id="ftVistaPat"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]
      ]]></eval>
    </thing>

  <thing
    id="ftVistaSee"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]
      ]]></eval>
    </thing>

  <thing
    id="ftVistaThi"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~we have to "fake" being a ritual caster to get access to any ritual
      ~stuff, even though this gives us too much
      perform hero.assign[Feat.ftRituaCas]
      ]]></eval>
    </thing>

  <thing
    id="ftVitalFor"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftVnmHnd"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <![CDATA[
      var bonus as number
      if (#level[] < 11) then
        bonus = 5
      elseif (#level[] < 21) then
        bonus = 10
      else
        bonus = 15
        endif
      #traitmodify[rsPoison,rsTotal,bonus,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWalkeDar"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skArcana | thingid.skAthletic | thingid.skBluff | thingid.skEnduranc | thingid.skHistory | thingid.skIntimida | thingid.skReligion | thingid.skThievery)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <bootstrap thing="pPalShrSha"/>
    <eval index="1" phase="Initialize" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]

      perform hero.assign[ImplemType.itHolySym]

      perform hero.child[pPalShrSha].setfocus
      perform focus.delete[PowerType.Encounter]
      perform focus.delete[PowerUse.Encounter]
      perform focus.assign[PowerUse.Daily]
      focus.field[spcMax].value = 1
      ]]></eval>
    </thing>

  <thing
    id="ftWalkein"
    name=""
    compset="">
    <bootstrap thing="fWlkShaWal" phase="***NOPARTIAL***"/>
    </thing>

  <thing
    id="ftWallCra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Athletics
      #traitmodify[skAthletic,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWandExp"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] < 11) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] < 21) then
        bonus = 2
      else
        bonus = 3
        endif

      ~add an appropriate number of 'attack bonus' tags
      foreach pick in hero where "EquipIndex.? & ImplemType.itWand"
        var i as number
        for i = 1 to bonus
          perform eachpick.assign[Helper.AttBonus]
          next
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftWardeEnd"
    name=""
    compset="">
    <tag group="PowerUse" tag="Encounter"/>
    </thing>

  <thing
    id="ftWarfoSou"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <bootstrap thing="pRacWarRes" phase="***NOPARTIAL***">
      <autotag group="ConfSource" tag="Race"/>
      </bootstrap>
    </thing>

  <thing
    id="ftWarloWra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~ignore if partial
      perform hero.childfound[pRacInfWra].assign[Hide.Special]
      ]]></eval>
    </thing>

  <thing
    id="ftWarriWil"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAcrobati | thingid.skAthletic | thingid.skDungeone | thingid.skEnduranc | thingid.skHeal | thingid.skNature | thingid.skPercepti | thingid.skStealth)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftWaryFig"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.child[trInit].assign[LinkAttr.attrWis]
      #traitmodify[skInsight,trtFeat,2,""]
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWasteWan"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skNature,trtFeat,2,""]
      #traitmodify[skPercepti,trtFeat,2,""]
      #traitmodify[trInit,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWatchOwl"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtBonus,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWeapoExp"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.WepGroup"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Traits" priority="20000">
      <after name="Weapon proficiencies final"/><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our attack bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] < 15) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] < 25) then
        bonus = 2
      else
        bonus = 3
        endif

      ~work out our tag expression - if we're a Weapon Master, this is all
      ~weapons we are proficient with as well as the normal ones
      var expr as string
      expr = "WepGroup." & field[usrChosen1].chosen.idstring
      if (hero.childexists[ftWeapoMas] <> 0) then
        expr = "(" & expr & ") | Helper.Proficient"
        endif

      ~add the attack bonus
      foreach pick in hero from WeaponBase where expr
        perform eachpick.field[wpAtkFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftWeapoFoc"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.WepGroup"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Traits" priority="20000">
      <after name="Weapon proficiencies final"/><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)

      ~work out what our damage bonus should be
      var bonus as number
      if (hero.tagvalue[Level.?] <= 10) then
        bonus = 1
      elseif (hero.tagvalue[Level.?] <= 20) then
        bonus = 2
      else
        bonus = 3
        endif

      ~work out our tag expression - if we're a Weapon Master, this is all
      ~weapons we are proficient with as well as the normal ones
      var expr as string
      expr = field[usrChosen1].chosen.tagids[WepGroup.?, " | "]
      if (hero.childexists[ftWeapoMas] <> 0) then
        expr = "(" & expr & ") | Helper.Proficient"
        endif

      ~increase the damage of all such weapons
      foreach pick in hero from WeaponBase where expr
        perform eachpick.field[wpDamFeat].modify[+,bonus,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftWeapoPro"
    name=""
    compset=""
    uniqueness="none">
    <fieldval field="usrCandid1" value="component.WeaponBase &amp; !Equipment.Natural &amp; !component.MagicItem &amp; !thingid.wpMagic?"/>
    <tag group="ChooseSrc1" tag="Thing"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      doneif (field[usrChosen1].ischosen = 0)
      perform field[usrChosen1].chosen.forward[WeaponProf.?]
      ]]></eval>
    </thing>

  <thing
    id="ftWhipTra"
    name=""
    compset="">
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      perform hero.assign[WeaponProf.wpWhip]
      ]]></eval>
    </thing>

  <thing
    id="ftWhirlSne"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Power &amp; PowerClass.clsRogue &amp; PowerType.Encounter"/>
    </thing>

  <thing
    id="ftWildSag"
    name=""
    compset="">
    <tag group="PowerUse" tag="Daily"/>
    </thing>

  <thing
    id="ftWildeWar"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skPercepti,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWildElf"
    name=""
    compset="">
    <pickreq thing="ftWoodElf" ispreclude="yes"/>
    </thing>

  <thing
    id="ftWizarWra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~ignore if partial
      perform hero.childfound[pRacInfWra].assign[Hide.Special]
      ]]></eval>
    </thing>

  <thing
    id="ftWoodElf"
    name=""
    compset="">
    <pickreq thing="ftWildElf" ispreclude="yes"/>
    </thing>

  <thing
    id="ftWolfsHer"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      #traitmodify[skEnduranc,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWordsWra"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000">
      <before name="Derived trtFinal"/>
      <![CDATA[
      #traitmodify[skIntimida,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftWrathCri"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="10000">
      <after name="Calc attrBonus"/><![CDATA[
      ~ignore if partial
      if (#attrbonus[attrStr] < #attrbonus[attrCha]) then
        perform hero.child[pwBasicMel].setfocus
        perform focus.delete[DamageAttr.attrStr]
        perform focus.delete[Attack.attrStr]
        perform focus.assign[DamageAttr.attrCha]
        perform focus.assign[Attack.attrCha]
        endif
      perform hero.childfound[pRacInfWra].assign[Hide.Special]
      ]]></eval>
    </thing>

  <thing
    id="ftWrathWar"
    name=""
    compset="">
    <fieldval field="usrCandid1" value="component.Skill &amp; (thingid.skAthletic | thingid.skEnduranc | thingid.skHeal | thingid.skIntimida | thingid.skStreetwi)"/>
    <tag group="PowerUse" tag="Encounter"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Calc sklTrained"/>
      <![CDATA[
      perform field[usrChosen1].chosen.assign[Helper.TrainedAut]
      ]]></eval>
    </thing>

  <thing
    id="ftXendrWea"
    name=""
    compset="">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="Traits" priority="1000">
      <before name="Weapon proficiencies final"/>
      <![CDATA[
      perform hero.assign[WeaponProf.wpDrowLon]
      perform hero.assign[WeaponProf.wpXendrBoo]
      foreach pick in hero from WeaponBase where "(thingid.wpDrowLon | thingid.wpXendrBoo)"
        perform eachpick.field[wpDamFeat].modify[+,2,""]
        nexteach
      ]]></eval>
    </thing>

  <thing
    id="ftYaramGia"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Athletics
      #traitmodify[skAcrobati,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftYelloClo"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 Athletics
      #traitmodify[skHistory,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftYuirwFey"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      ~+2 arcana
      #traitmodify[skArcana,trtFeat,2,""]
      ]]></eval>
    </thing>

  <thing
    id="ftZuokeCen"
    name=""
    compset="">
    <eval index="1" phase="Traits" priority="1000"><![CDATA[
      perform hero.child[skAthletic].setlinkage[attribute,Attribute,"thingid.attrWis"]
      perform hero.child[trHealth].assign[LinkAttr.attrWis]
      perform hero.child[trSurges].assign[LinkAttr.attrWis]
      ]]></eval>
    </thing>

  </document>
