<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- This file contains the definition of the "Basics" summary panel. This panel
      contains the list of attributes and derived traits for the character.

      Since all of the tables shown within this summary panel should fit within the
      available vertical space, no scroller is required, so we turn off the scroller
      for each table so that Hero Lab doesn't leave space for one.

      All public visual elements used with summary panels start with the prefix "sm"
      to associate them with the various summary panels.
-->

<document signature="Hero Lab Data">


  <!-- smAttrib portal - table of attributes
  -->
  <portal
    id="smAttrib"
    style="tblInvisSm">
    <table_fixed
      component="Attribute"
      showtemplate="smAttrib"
      showsortset="explicit"
      scrollable="no">
      </table_fixed>
    </portal>


  <!-- smDefense portal - table of defenses
  -->
  <portal
    id="smDefense"
    style="tblInvisSm">
    <table_fixed
      component="Defense"
      showtemplate="smTrait"
      showsortset="explicit"
      scrollable="no">
      </table_fixed>
    </portal>


  <!-- smDerived portal - table of derived traits
  -->
  <portal
    id="smDerived"
    style="tblInvisSm">
    <table_fixed
      component="Derived"
      showtemplate="smTrait"
      showsortset="explicit"
      scrollable="no">
      <list><![CDATA[
        !component.Defense & !component.Skill & !HideTab.smBasics
        ]]></list>
      </table_fixed>
    </portal>


  <!-- smAttrib template
        This template shows the name, final value and attribute bonus of each
        attribute.
  -->
  <template
    id="smAttrib"
    name="Summary Attribute Pick"
    compset="Attribute">

    <portal
      id="value"
      style="lblSummary">
      <label
        field="trtText">
        </label>
      <mouseinfo><![CDATA[
        var traithist as string
        call TraitHist
        @text = traithist
        ]]></mouseinfo>
      </portal>

    <portal
      id="bonus"
      style="lblSummary">
      <label
        field="attrBonus">
        </label>
      </portal>

    <portal
      id="name"
      style="lblSummary">
      <label
        field="name">
        </label>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[name].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position the value on the left in a limited span, the bonus in the
      ~middle and the name on the right
      portal[value].width = maximum(portal[value].textwidth, 25)
      portal[bonus].width = maximum(portal[bonus].textwidth, 25)
      perform portal[bonus].alignrel[ltor,value,5]
      perform portal[name].alignrel[ltor,bonus,5]
      ]]></position>
    </template>


  <!-- smTrait template
        This template shows the name and final value of the given trait, providing
        mouse-over behavior to show the details of each trait.
  -->
  <template
    id="smTrait"
    name="Summary Trait Pick"
    compset="Trait">

    <portal
      id="value"
      style="lblSummary">
      <label>
        <labeltext><![CDATA[
          ~if we're a skill, use our special 'skill final' field
          if (tagis[component.Skill] <> 0) then
            @text = field[sklRoll].text

          ~otherwise get the relevant trait value
          else
            @text = field[trtText].text
            endif
          ]]></labeltext>
        </label>
      <mouseinfo><![CDATA[
        var traithist as string
        call TraitHist
        @text = traithist
        ]]></mouseinfo>
      </portal>

    <portal
      id="name"
      style="lblSummary">
      <label
        field="name">
        </label>
      <mouseinfo/>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[name].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~position the value on the left in a limited span and the name on the right
      if (portal[value].width <= 25) then
        portal[value].width = 25
      else
        portal[value].left = 3
        endif
      perform portal[name].alignrel[ltor,value,5]
      ]]></position>
    </template>


  <!-- smBasics layout
        This layout contains the table of attributes and derived traits for the
        character.
  -->
  <layout
    id="smBasics">
    <portalref portal="smAttrib"/>
    <portalref portal="smDefense"/>
    <portalref portal="smDerived"/>

    <position><![CDATA[
      ~position and size the tables to span the full layout - defenses go at
      ~the top because they're most used
      perform portal[smDefense].autoplace[10]
      perform portal[smAttrib].autoplace[10]
      perform portal[smDerived].autoplace[10]
      ]]></position>

    </layout>


  <!-- smBasics panel
        This panel is designated as a summary panel and given an order that positions
        it properly amongst the other defined summary panels. We setup a small margin
        to indent the layout from the edges of the panel.

        The panel is assigned a "live" tagexpr so that its visibility can be
        controlled for different types of characters. While not really useful in the
        sample data files, this approach can be quite useful when the data files
        expand to govern creation of widely varying characters, such as vampires vs.
        ghosts vs. mortals in the World of Darkness game system.
  -->
  <panel
    id="smBasics"
    name="Abilities"
    order="10010"
    marginhorz="2"
    marginvert="2"
    issummary="yes">
    <live>!HideTab.smBasics</live>
    <layoutref layout="smBasics"/>

    <position><![CDATA[
      ]]></position>

    </panel>


  </document>
